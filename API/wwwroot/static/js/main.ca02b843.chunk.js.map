{"version":3,"sources":["features/contact/counterSlice.ts","app/models/pagination.ts","app/api/agent.ts","app/util/util.ts","features/basket/basketSlice.ts","features/catalog/catalogSlice.ts","features/account/accountSlice.ts","app/store/configureStore.ts","app/layout/SignedInMenu.tsx","app/layout/Header.tsx","features/catalog/ProductCard.tsx","features/catalog/ProductCardSkeleton.tsx","features/catalog/ProductList.tsx","app/layout/LoadingComponent.tsx","features/catalog/ProductSearch.tsx","app/components/RadioButtonGroup.tsx","app/components/CheckboxButtons.tsx","app/components/AppPagination.tsx","features/catalog/Catalog.tsx","features/home/HomePage.tsx","features/about/AboutPage.tsx","features/contact/ContactPage.tsx","app/errors/NotFound.tsx","features/catalog/ProductDetails.tsx","features/basket/BasketSummary.tsx","features/basket/BasketTable.tsx","features/basket/BasketPage.tsx","app/errors/ServerError.tsx","features/account/Login.tsx","features/account/Register.tsx","app/layout/PrivateRoute.tsx","features/orders/OrderDetailed.tsx","features/orders/Orders.tsx","app/components/AppTextInput.tsx","app/components/AppCheckbox.tsx","features/checkout/AddressForm.tsx","features/checkout/StripeInput.tsx","features/checkout/PaymentForm.tsx","features/checkout/Review.tsx","features/checkout/checkoutValidation.ts","features/checkout/CheckoutPage.tsx","features/checkout/CheckoutWrapper.tsx","app/layout/App.tsx","reportWebVitals.ts","index.tsx"],"names":["counterSlice","createSlice","name","initialState","data","title","reducers","increment","state","action","payload","decrement","actions","PaginatedResponse","items","metaData","this","axios","defaults","baseURL","process","withCredentials","responseBody","response","interceptors","request","use","config","token","store","getState","account","user","headers","Authorization","a","res","pagination","JSON","parse","err","status","errors","modelStateErrors","key","push","flat","toast","error","history","pathname","Promise","reject","requests","url","params","get","then","body","post","delete","Basket","addItem","productId","quantity","removeItem","agent","Catalog","list","details","id","fetchFilters","TestErrors","get400Error","get401Error","get404Error","get500Error","getValidationError","Account","login","values","register","currentUser","fetchAddress","Orders","fetch","create","Payments","createPaymentIntent","currencyFormat","amount","toFixed","fetchBasketAsync","createAsyncThunk","_","thunkAPI","rejectWithValue","condition","b","document","cookie","match","pop","getCookie","addBasketItemAsync","removeBasketItemAsync","basketSlice","basket","setBasket","clearBasket","extraReducers","builder","addCase","pending","meta","arg","fulfilled","itemIndex","findIndex","i","undefined","splice","rejected","console","log","addMatcher","isAnyOf","productsAdapter","createEntityAdapter","getAxiosParams","productParams","URLSearchParams","append","pageNumber","toString","pageSize","orderBy","searchTerm","brands","length","types","fetchProductsAsync","catalog","dispatch","setMetaData","fetchProductAsync","catalogSlice","getInitialState","productsLoaded","filtersLoaded","setProductParams","setPageNumber","resetProductParams","setAll","upsertOne","productSelectors","getSelectors","signInUser","userDTO","localStorage","setItem","stringify","fetchCurrentUser","setUser","getItem","accountSlice","signOut","configureStore","reducer","counter","useAppDispatch","useDispatch","useAppSelector","useSelector","SignedInMenu","useState","anchorEl","setAnchorEl","open","Boolean","handleClose","Button","color","onClick","event","currentTarget","sx","typography","email","Menu","onClose","TransitionComponent","Fade","MenuItem","component","Link","to","midLinks","path","rightLinks","navStyles","textDecoration","Header","darkMode","handleThemeChange","itemCount","reduce","sum","item","AppBar","position","Toolbar","display","justifyContent","alignItems","Box","Typography","variant","NavLink","exact","Switch","checked","onChange","List","map","ListItem","toUpperCase","IconButton","size","Badge","badgeContent","ShoppingCart","ProductCard","product","Card","CardHeader","avatar","Avatar","bgcolor","charAt","titleTypographyProps","fontWeight","CardMedia","height","backgroundSize","image","pictureUrl","CardContent","gutterBottom","price","brand","type","CardActions","LoadingButton","loading","includes","ProductCardSkeleton","Grid","xs","Skeleton","animation","width","style","marginBottom","ProductList","products","container","spacing","LoadingComponent","message","Backdrop","invisible","CircularProgress","top","ProductSearch","setSearchTerm","debouncedSearch","debounce","target","value","TextField","label","fullWidth","RadioButtonGroup","options","selectedValue","FormControl","RadioGroup","FormControlLabel","control","Radio","CheckboxButtons","checkedItems","setCheckedItems","FormGroup","Checkbox","indexOf","newChecked","filter","handleChecked","AppPagination","onPageChange","currentPage","totalPages","totalCount","Pagination","count","page","e","sortOptions","selectAll","useEffect","columnSpacing","Paper","mb","p","HomePage","dots","infinite","speed","slidesToShow","slidesToScroll","src","alt","maxHeight","AboutPage","validationErrors","setValidationErrors","Container","ButtonGroup","catch","Alert","severity","AlertTitle","ListItemText","ContactPage","NotFound","Divider","ProductDetails","useParams","selectById","productStatus","setQuantity","find","mt","TableContainer","Table","TableBody","TableRow","TableCell","description","quantityInStock","disabled","updateQuantity","BasketSummary","subtotal","deliveryFee","colSpan","align","fontStyle","BasketTable","isBasket","minWidth","TableHead","border","scope","marginRight","Remove","Add","Delete","BasketPage","ServerError","useHistory","useLocation","detail","Login","location","useForm","mode","handleSubmit","formState","isSubmitting","isValid","from","maxWidth","flexDirection","m","onSubmit","noValidate","margin","autoFocus","required","username","helperText","password","Register","setError","success","forEach","handleApiErrors","pattern","PrivateRoute","Component","rest","render","props","OrderDetailed","order","setSelectedOrder","orderItems","orderStatus","orders","setOrders","setLoading","selectedOrderNumber","setSelectedOrderNumber","finally","o","total","orderDate","split","AppTextInput","useController","defaultValue","fieldState","field","AppCheckbox","AddressForm","useFormContext","sm","isDirty","StripeInput","forwardRef","ref","elementRef","useRef","useImperativeHandle","focus","current","onReady","element","PaymentForm","cardState","onCardInputChange","md","elementError","cardNumber","autoComplete","InputLabelProps","shrink","InputProps","inputComponent","inputProps","CardNumberElement","cardExpiry","CardExpiryElement","cardCvc","CardCvcElement","Review","paddingTop","validationSchema","yup","fullName","address1","address2","city","zip","country","nameOnCard","steps","CheckoutPage","activeStep","setActiveStep","orderNumber","setOrderNumber","setCardState","cardComplete","setCardComplete","paymentMessage","setPaymentMessage","paymentSucceeded","setPaymentSucceeded","stripe","useStripe","elements","useElements","elementType","complete","currentValidationSchema","methods","resolver","yupResolver","submitOrder","saveAddress","shippingAddress","cardElement","getElement","confirmCardPayment","clientSecret","payment_method","card","billing_details","paymentResult","paymentIntent","reset","getValues","handleNext","handleBack","my","Stepper","pt","pb","Step","StepLabel","ml","step","Error","getStepContent","stripePromise","loadStripe","CheckoutWrapper","App","initApp","useCallback","setDarkMode","paletteType","theme","createTheme","palette","background","default","ThemeProvider","CssBaseline","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createBrowserHistory","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ca02b843.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport interface CounterState {\r\n    data: number;\r\n    title: string;\r\n}\r\n\r\nconst initialState: CounterState = {\r\n    data: 42,\r\n    title: 'YARC (yet another redux counter with redux toolkit)'\r\n}\r\n\r\nexport const counterSlice = createSlice({\r\n    name: 'counter',\r\n    initialState,\r\n    reducers: {\r\n        increment: (state, action) => {\r\n            state.data += action.payload\r\n        },\r\n        decrement: (state, action) => {\r\n            state.data -= action.payload\r\n        },\r\n    }\r\n});\r\n\r\nexport const {increment, decrement} = counterSlice.actions;","export interface MetaData {\r\n    currentPage: number;\r\n    totalPages: number;\r\n    pageSize: number;\r\n    totalCount: number;\r\n}\r\n\r\nexport class PaginatedResponse<T> {\r\n    items: T;\r\n    metaData: MetaData;\r\n\r\n    constructor(items: T, metaData: MetaData) {\r\n        this.items = items;\r\n        this.metaData = metaData;\r\n    }\r\n}","import axios, { AxiosError, AxiosResponse } from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport { setTimeout } from 'timers';\r\nimport { history } from '../..';\r\nimport { PaginatedResponse } from '../models/pagination';\r\nimport { store } from '../store/configureStore';\r\n\r\nconst sleep = () => new Promise(resolve => setTimeout(resolve, 500));\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\naxios.defaults.withCredentials = true;\r\n\r\nconst responseBody = (response: AxiosResponse<any>) => response.data;\r\n\r\naxios.interceptors.request.use(config => {\r\n    const token = store.getState().account.user?.token;\r\n    if (token) config.headers!.Authorization = `Bearer ${token}`;\r\n    return config;\r\n});\r\n\r\naxios.interceptors.response.use(async res => {\r\n    if (process.env.NODE_ENV === 'development') await sleep();\r\n    const pagination = res.headers['pagination'];\r\n    if (pagination) {\r\n        res.data = new PaginatedResponse(res.data, JSON.parse(pagination));\r\n        return res;\r\n    }\r\n    return res;\r\n}, (err: AxiosError) => {\r\n    const {data, status} = err.response as any;\r\n    switch (status) {\r\n        case 400:\r\n            if (data.errors) {\r\n                const modelStateErrors: string[] = [];\r\n                for (const key in data.errors) {\r\n                    if (data.errors[key]) {\r\n                        modelStateErrors.push(data.errors[key]);\r\n                    }\r\n                }\r\n                throw modelStateErrors.flat();\r\n            }\r\n            toast.error(data.title);\r\n            break;\r\n        case 401:\r\n            toast.error(data.title);\r\n            break;\r\n        case 500:\r\n            history.push({\r\n                pathname: '/server-error',\r\n                state: { error: data }\r\n            });\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    return Promise.reject(err.response);\r\n});\r\n\r\nconst requests = {\r\n    get: (url: string, params?: URLSearchParams) => axios.get(url, {params}).then(responseBody),\r\n    post: (url: string, body: {}) => axios.post(url, body).then(responseBody),\r\n    put: (url: string, body: {}) => axios.put(url, body).then(responseBody),\r\n    delete: (url: string) => axios.delete(url).then(responseBody),\r\n};\r\n\r\nconst Catalog = {\r\n    list: (params: URLSearchParams) => requests.get('products', params),\r\n    details: (id: number) => requests.get(`products/${id}`),\r\n    fetchFilters: () => requests.get('products/filters'),\r\n};\r\n\r\nconst TestErrors = {\r\n    get400Error: () => requests.get('buggy/bad-request'),\r\n    get401Error: () => requests.get('buggy/unauthorized'),\r\n    get404Error: () => requests.get('buggy/not-found'),\r\n    get500Error: () => requests.get('buggy/server-error'),\r\n    getValidationError: () => requests.get('buggy/validation-error'),\r\n};\r\n\r\nconst Basket = {\r\n    get: () => requests.get('basket'),\r\n    addItem: (productId: number, quantity = 1) => requests.post(`basket?productId=${productId}&quantity=${quantity}`, {}),\r\n    removeItem: (productId: number, quantity = 1) => requests.delete(`basket?productId=${productId}&quantity=${quantity}`),\r\n};\r\n\r\nconst Account = {\r\n    login: (values: any) => requests.post('account/login', values),\r\n    register: (values: any) => requests.post('account/register', values),\r\n    currentUser: () => requests.get('account/currentUser'),\r\n    fetchAddress: () => requests.get('account/savedAddress'),\r\n};\r\n\r\nconst Orders = {\r\n    list: () => requests.get('orders'),\r\n    fetch: (id: number) => requests.get(`orders/${id}`),\r\n    create: (values: any) => requests.post('orders', values)\r\n};\r\n\r\nconst Payments = {\r\n    createPaymentIntent: () => requests.post('payments', {})\r\n};\r\n\r\nconst agent = {\r\n    Catalog,\r\n    TestErrors,\r\n    Basket,\r\n    Account,\r\n    Orders,\r\n    Payments\r\n};\r\n\r\nexport default agent;","export function getCookie(key: string) {\r\n    const b = document.cookie.match(\"(^|;)\\\\s*\" + key + \"\\\\s*=\\\\s*([^;]+)\");\r\n    return b ? b.pop() : \"\";\r\n}\r\n\r\nexport function currencyFormat(amount: number) {\r\n    return `$ ${(amount / 100).toFixed(2)}`;\r\n}","import { createAsyncThunk, createSlice, isAnyOf } from '@reduxjs/toolkit';\r\nimport agent from '../../app/api/agent';\r\nimport { Basket } from '../../app/models/basket';\r\nimport { getCookie } from '../../app/util/util';\r\n\r\ninterface BasketState {\r\n    basket: Basket | null;\r\n    status: string;\r\n}\r\n\r\nconst initialState: BasketState = {\r\n    basket: null,\r\n    status: 'idle'\r\n}\r\n\r\nexport const fetchBasketAsync = createAsyncThunk<Basket>(\r\n    'basket/fetchBasketAsync',\r\n    async (_, thunkAPI) => {\r\n        try {\r\n            return await agent.Basket.get();\r\n        } catch (error: any) {\r\n            return thunkAPI.rejectWithValue({error: error.data})\r\n        }\r\n    },\r\n    {\r\n        condition: () => {\r\n            if (!getCookie('buyerId')) return false;\r\n        }\r\n    }\r\n);\r\n\r\nexport const addBasketItemAsync = createAsyncThunk<Basket, {productId: number, quantity?: number}>(\r\n    'basket/addBasketItemAsync',\r\n    async ({productId, quantity = 1}, thunkAPI) => {\r\n        try {\r\n            return await agent.Basket.addItem(productId, quantity);\r\n        } catch (error: any) {\r\n            return thunkAPI.rejectWithValue({ error: error.data });\r\n        }\r\n    }\r\n);\r\n\r\nexport const removeBasketItemAsync = createAsyncThunk<void, {productId: number, quantity: number, name?: string}>(\r\n    'basket/removeBasketItemAsync',\r\n    async ({productId, quantity}, thunkAPI) => {\r\n        try {\r\n            await agent.Basket.removeItem(productId, quantity);\r\n        } catch (error: any) {\r\n            return thunkAPI.rejectWithValue({ error: error.data });\r\n        }\r\n    }\r\n);\r\n\r\nexport const basketSlice = createSlice({\r\n    name: 'basket',\r\n    initialState,\r\n    reducers: {\r\n        setBasket: (state, action) => {\r\n            state.basket = action.payload\r\n        },\r\n        clearBasket: (state) => {\r\n            state.basket = null;\r\n        },\r\n    },\r\n    extraReducers: (builder => {\r\n        builder.addCase(addBasketItemAsync.pending, (state, action) => {\r\n            // console.log(action);\r\n            state.status = 'pendingAddItem' + action.meta.arg.productId;\r\n        });\r\n        builder.addCase(removeBasketItemAsync.pending, (state, action) => {\r\n            state.status = 'pendingRemoveItem' + action.meta.arg.productId + action.meta.arg.name;\r\n        });\r\n        \r\n        builder.addCase(removeBasketItemAsync.fulfilled, (state, action) => {\r\n            const {productId, quantity} = action.meta.arg;\r\n            const itemIndex = state.basket?.items.findIndex(i => i.productId === productId);\r\n            if (itemIndex === -1 || itemIndex === undefined) return;\r\n            state.basket!.items[itemIndex].quantity -= quantity;\r\n            if (state.basket!.items[itemIndex].quantity === 0) state.basket!.items.splice(itemIndex, 1);\r\n            state.status = 'idle';\r\n        });\r\n        builder.addCase(removeBasketItemAsync.rejected, (state, action) => {\r\n            console.log(action.payload);\r\n            state.status = 'idle';\r\n        });\r\n\r\n        builder.addMatcher(isAnyOf(addBasketItemAsync.fulfilled, fetchBasketAsync.fulfilled), (state, action) => {\r\n            state.basket = action.payload;\r\n            state.status = 'idle';\r\n        });\r\n        builder.addMatcher(isAnyOf(addBasketItemAsync.rejected, fetchBasketAsync.rejected), (state, action) => {\r\n            state.status = 'idle';\r\n            console.log(action.payload);\r\n        });\r\n    })\r\n});\r\n\r\nexport const {setBasket, clearBasket} = basketSlice.actions;","import { createAsyncThunk, createEntityAdapter, createSlice } from '@reduxjs/toolkit'\r\n\r\nimport { Product, ProductParams } from '../../app/models/product';\r\nimport agent from '../../app/api/agent';\r\nimport { RootState } from '../../app/store/configureStore';\r\nimport { MetaData } from '../../app/models/pagination';\r\n\r\ninterface CatalogState {\r\n    productsLoaded: boolean;\r\n    filtersLoaded: boolean;\r\n    status: string;\r\n    brands: string[];\r\n    types: string[];\r\n    productParams: ProductParams;\r\n    metaData: MetaData | null;\r\n};\r\n\r\nconst productsAdapter = createEntityAdapter<Product>();\r\n\r\nfunction getAxiosParams(productParams: ProductParams) {\r\n    const params = new URLSearchParams();\r\n    \r\n    params.append('pageNumber', productParams.pageNumber.toString());\r\n    params.append('pageSize', productParams.pageSize.toString());\r\n    params.append('orderBy', productParams.orderBy);\r\n    if (productParams.searchTerm) params.append('searchTerm', productParams.searchTerm);\r\n    if (productParams.brands.length > 0) params.append('brands', productParams.brands.toString());\r\n    if (productParams.types.length > 0) params.append('types', productParams.types.toString());\r\n    \r\n    return params;\r\n}\r\n\r\nexport const fetchProductsAsync = createAsyncThunk<Product[], void, {state: RootState}>(\r\n    'catalog/fetchProductsAsync',\r\n    async (_, thunkAPI) => {\r\n        const params = getAxiosParams(thunkAPI.getState().catalog.productParams);\r\n        try {\r\n            const res = await agent.Catalog.list(params);\r\n            thunkAPI.dispatch(setMetaData(res.metaData));\r\n\r\n            return res.items;\r\n        } catch (error: any) {\r\n            return thunkAPI.rejectWithValue({ error: error.data });\r\n        }\r\n    }\r\n);\r\n\r\nexport const fetchProductAsync = createAsyncThunk<Product, number>(\r\n    'catalog/fetchProductAsync',\r\n    async (productId: number, thunkAPI) => {\r\n        try {\r\n            return await agent.Catalog.details(productId);\r\n        } catch (error: any) {\r\n            return thunkAPI.rejectWithValue({ error: error.data });\r\n        }\r\n    }\r\n);\r\n\r\nexport const fetchFilters = createAsyncThunk(\r\n    'catalog/fetchFilters',\r\n    async (_, thunkAPI) => {\r\n        try {\r\n            return agent.Catalog.fetchFilters();\r\n        } catch (error: any) {\r\n            return thunkAPI.rejectWithValue({ error: error.data });\r\n        }\r\n    }\r\n);\r\n\r\n\r\nfunction initParams() {\r\n    return {\r\n        pageNumber: 1,\r\n        pageSize: 6,\r\n        orderBy: 'name',\r\n        brands: [],\r\n        types: [],\r\n    };\r\n}\r\n\r\nexport const catalogSlice = createSlice({\r\n    name: 'catalog',\r\n    initialState: productsAdapter.getInitialState<CatalogState>({\r\n        productsLoaded: false,\r\n        filtersLoaded: false,\r\n        status: 'idle',\r\n        brands: [],\r\n        types: [],\r\n        productParams: initParams(),\r\n        metaData: null\r\n    }),\r\n    reducers: {\r\n        setProductParams: (state, action) => {\r\n            state.productsLoaded = false;\r\n            state.productParams = {...state.productParams, ...action.payload, pageNumber: 1};\r\n        },\r\n        setPageNumber: (state, action) => {\r\n            state.productsLoaded = false;\r\n            state.productParams = {...state.productParams, ...action.payload};\r\n        },\r\n        setMetaData: (state, action) => {\r\n            state.metaData = action.payload;\r\n        },\r\n        resetProductParams: (state) => {\r\n            state.productParams = initParams();\r\n        }\r\n    },\r\n    extraReducers: (builder => {\r\n        builder.addCase(fetchProductsAsync.pending, (state) => {\r\n            state.status = 'pendingFetchProducts';\r\n        });\r\n        builder.addCase(fetchProductsAsync.fulfilled, (state, action) => {\r\n            productsAdapter.setAll(state, action.payload);\r\n            state.status = 'idle';\r\n            state.productsLoaded = true;\r\n        });\r\n        builder.addCase(fetchProductsAsync.rejected, (state, action) => {\r\n            console.log(action);\r\n            state.status = 'idle';\r\n        });\r\n\r\n        builder.addCase(fetchProductAsync.pending, (state) => {\r\n            state.status = 'pendingFetchProduct';\r\n        });\r\n        builder.addCase(fetchProductAsync.fulfilled, (state, action) => {\r\n            productsAdapter.upsertOne(state, action.payload);\r\n            state.status = 'idle';\r\n        });\r\n        builder.addCase(fetchProductAsync.rejected, (state, action) => {\r\n            console.log(action.payload);\r\n            state.status = 'idle';\r\n        });\r\n\r\n        builder.addCase(fetchFilters.pending, (state) => {\r\n            state.status = 'pendingFetchFilters';\r\n        });\r\n        builder.addCase(fetchFilters.fulfilled, (state, action) => {\r\n            state.brands = action.payload.brands;\r\n            state.types = action.payload.types;\r\n            state.filtersLoaded = true;\r\n        });\r\n        builder.addCase(fetchFilters.rejected, (state, action) => {\r\n            console.log(action.payload);\r\n            state.status = 'idle';\r\n        });\r\n    })\r\n});\r\n\r\nexport const productSelectors = productsAdapter.getSelectors((state: RootState) => state.catalog);\r\n\r\nexport const {setProductParams, setPageNumber, setMetaData, resetProductParams} = catalogSlice.actions;","import { createAsyncThunk, createSlice, isAnyOf } from '@reduxjs/toolkit';\r\nimport { FieldValues } from 'react-hook-form';\r\n\r\nimport { User } from '../../app/models/user';\r\nimport agent from '../../app/api/agent';\r\nimport { history } from '../..';\r\nimport { toast } from 'react-toastify';\r\nimport { setBasket } from '../basket/basketSlice';\r\n\r\ninterface AccountState {\r\n    user: User | null;\r\n}\r\n\r\nconst initialState: AccountState = {\r\n    user: null,\r\n}\r\n\r\nexport const signInUser = createAsyncThunk<User, FieldValues>(\r\n    'account/signInUser',\r\n    async (data, thunkAPI) => {\r\n        try {\r\n            const userDTO = await agent.Account.login(data);\r\n            const {basket, ...user} = userDTO;\r\n            if (basket) thunkAPI.dispatch(setBasket(basket));\r\n            localStorage.setItem('user', JSON.stringify(user));\r\n            return user;\r\n        } catch (error: any) {\r\n            return thunkAPI.rejectWithValue({error: error.data});\r\n        }\r\n    }\r\n);\r\n\r\nexport const fetchCurrentUser = createAsyncThunk<User>(\r\n    'account/fetchCurrentUser',\r\n    async (_, thunkAPI) => {\r\n        thunkAPI.dispatch(setUser(JSON.parse(localStorage.getItem('user')!)));\r\n        try {\r\n            const userDTO = await agent.Account.currentUser();\r\n            const {basket, ...user} = userDTO;\r\n            if (basket) thunkAPI.dispatch(setBasket(basket));\r\n            localStorage.setItem('user', JSON.stringify(user));\r\n            return user;\r\n        } catch (error: any) {\r\n            return thunkAPI.rejectWithValue({error: error.data});\r\n        }\r\n    },\r\n    {\r\n        condition: () => {\r\n            if (!localStorage.getItem('user')) return false;\r\n        }\r\n    }\r\n);\r\n\r\nexport const accountSlice = createSlice({\r\n    name: 'account',\r\n    initialState,\r\n    reducers: {\r\n        signOut: (state) => {\r\n            state.user = null;\r\n            localStorage.removeItem('user');\r\n            history.push('/');\r\n        },\r\n        setUser: (state, action) => {\r\n            state.user = action.payload;\r\n        },\r\n    },\r\n    extraReducers: (builder => {\r\n        builder.addCase(fetchCurrentUser.rejected, (state) => {\r\n            state.user = null;\r\n            localStorage.removeItem('user');\r\n            toast.error('Session expired - Please login again!');\r\n            history.push('/');\r\n        });\r\n        builder.addMatcher(isAnyOf(signInUser.fulfilled, fetchCurrentUser.fulfilled), (state, action) => {\r\n            state.user = action.payload;\r\n        });\r\n        builder.addMatcher(isAnyOf(signInUser.rejected), (state, action) => {\r\n            throw action.payload;\r\n        });\r\n    })\r\n});\r\n\r\nexport const { signOut, setUser } = accountSlice.actions;","// import { createStore } from 'redux';\r\n// import counterReducer from '../../features/contact/counterReducer';\r\n\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\nimport { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\r\nimport { counterSlice } from '../../features/contact/counterSlice';\r\nimport { basketSlice } from '../../features/basket/basketSlice';\r\nimport { catalogSlice } from '../../features/catalog/catalogSlice';\r\nimport { accountSlice } from '../../features/account/accountSlice';\r\n\r\n// export function configureStore() {\r\n//     return createStore(counterReducer);\r\n// }\r\n\r\n\r\nexport const store = configureStore({\r\n    reducer: {\r\n        counter: counterSlice.reducer,\r\n        basket: basketSlice.reducer,\r\n        catalog: catalogSlice.reducer,\r\n        account: accountSlice.reducer,\r\n    }\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = typeof store.dispatch;\r\n\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;","import React, { useState } from 'react';\r\nimport { Button, Fade, Menu, MenuItem } from '@mui/material';\r\nimport { useAppDispatch, useAppSelector } from '../store/configureStore';\r\nimport { signOut } from '../../features/account/accountSlice';\r\nimport { clearBasket } from '../../features/basket/basketSlice';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function SignedInMenu() {\r\n    const dispatch = useAppDispatch();\r\n    const {user} = useAppSelector(state => state.account);\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const open = Boolean(anchorEl);\r\n    const handleClick = (event: any) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Button\r\n                color='inherit'\r\n                onClick={handleClick}\r\n                sx={{ typography: 'h6' }}\r\n            >\r\n                {user?.email}\r\n            </Button>\r\n            <Menu\r\n                anchorEl={anchorEl}\r\n                open={open}\r\n                onClose={handleClose}\r\n                TransitionComponent={Fade}\r\n            >\r\n                <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n                <MenuItem component={Link} to='/orders'>My orders</MenuItem>\r\n                <MenuItem onClick={() => {\r\n                    dispatch(signOut())\r\n                    dispatch(clearBasket())\r\n                }}>Logout</MenuItem>\r\n            </Menu>\r\n        </>\r\n    );\r\n}\r\n","import { ShoppingCart } from '@mui/icons-material';\r\nimport { AppBar, Badge, IconButton, List, ListItem, Switch, Toolbar, Typography } from '@mui/material';\r\nimport { Box } from '@mui/system';\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport { useAppSelector } from '../store/configureStore';\r\nimport SignedInMenu from './SignedInMenu';\r\n\r\ninterface Props {\r\n    darkMode: boolean;\r\n    handleThemeChange: () => void;\r\n};\r\n\r\nconst midLinks = [\r\n    { title: 'catalog', path: '/catalog' },\r\n    { title: 'about', path: '/about' },\r\n    { title: 'contact', path: '/contact' },\r\n];\r\n\r\nconst rightLinks = [\r\n    { title: 'login', path: '/login' },\r\n    { title: 'register', path: '/register' },\r\n];\r\n\r\nconst navStyles = {\r\n    color: 'inherit',\r\n    textDecoration: 'none',\r\n    typography: 'h6',\r\n    '&:hover': {\r\n        color: 'grey.500'\r\n    },\r\n    '&.active': {\r\n        color: 'text.secondary'\r\n    },\r\n};\r\n\r\nexport default function Header({ darkMode, handleThemeChange }: Props) {\r\n    const {basket} = useAppSelector(state => state.basket);\r\n    const {user} = useAppSelector(state => state.account);\r\n    const itemCount = basket?.items.reduce((sum, item) => sum + item.quantity, 0);\r\n    \r\n    return (\r\n        <AppBar position=\"static\">\r\n            <Toolbar\r\n                sx={{\r\n                    display: 'flex',\r\n                    justifyContent: 'space-between',\r\n                    alignItems: 'center'\r\n                }}>\r\n                <Box display='flex' alignItems='center'>\r\n                    <Typography variant=\"h6\" component={NavLink} to='/' exact sx={navStyles}>\r\n                        React-Store\r\n                    </Typography>\r\n                    <Switch checked={darkMode} onChange={handleThemeChange} color=\"secondary\" />\r\n                </Box>\r\n\r\n                <List sx={{ display: 'flex' }}>\r\n                    {midLinks.map(({ title, path }) => (\r\n                        <ListItem component={NavLink} to={path} key={path} sx={navStyles}>\r\n                            {title.toUpperCase()}\r\n                        </ListItem>\r\n                    ))}\r\n                </List>\r\n                \r\n                <Box display='flex' alignItems='center'>\r\n                    <IconButton component={Link} to='/basket' size='large' sx={{ color: 'inherit' }}>\r\n                        <Badge badgeContent={itemCount} color='secondary'>\r\n                            <ShoppingCart />\r\n                        </Badge>\r\n                    </IconButton>\r\n                    {user ? (\r\n                        <SignedInMenu />\r\n                    ) : (\r\n                        <List sx={{ display: 'flex' }}>\r\n                            {rightLinks.map(({ title, path }) => (\r\n                                <ListItem component={NavLink} to={path} key={path} sx={navStyles}>\r\n                                    {title.toUpperCase()}\r\n                                </ListItem>\r\n                            ))}\r\n                        </List>\r\n                    )}\r\n                </Box>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n}","import { LoadingButton } from '@mui/lab';\r\nimport { Avatar, Button, Card, CardActions, CardContent, CardHeader, CardMedia, Typography } from '@mui/material';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { Product } from '../../app/models/product';\r\nimport { useAppDispatch, useAppSelector } from '../../app/store/configureStore';\r\nimport { currencyFormat } from '../../app/util/util';\r\nimport { addBasketItemAsync } from '../basket/basketSlice';\r\n\r\ninterface Props {\r\n    product: Product;\r\n}\r\n\r\nexport default function ProductCard({ product }: Props) {\r\n    const {status} = useAppSelector(state => state.basket);\r\n    const dispatch = useAppDispatch();\r\n\r\n    return (\r\n        <Card>\r\n            <CardHeader\r\n                avatar={\r\n                    <Avatar sx={{ bgcolor: 'secondary.main' }}>\r\n                        {product.name.charAt(0).toUpperCase()}\r\n                    </Avatar>\r\n                }\r\n                title={product.name}\r\n                titleTypographyProps={{\r\n                    sx: { fontWeight: 'bold', color: 'primary.main' },\r\n                }}\r\n            />\r\n            <CardMedia\r\n                sx={{ height: 140, backgroundSize: 'contain', bgcolor: 'primary.light' }}\r\n                image={product.pictureUrl}\r\n                title={product.name}\r\n            />\r\n            <CardContent>\r\n                <Typography gutterBottom variant=\"h5\" color=\"secondary\">\r\n                    {currencyFormat(product.price)}\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                    {product.brand} / {product.type}\r\n                </Typography>\r\n            </CardContent>\r\n            <CardActions>\r\n                <LoadingButton\r\n                    loading={status.includes('pendingAddItem' + product.id)}\r\n                    onClick={() => dispatch(addBasketItemAsync({productId: product.id}))}\r\n                    size=\"small\">Add to cart</LoadingButton>\r\n                <Button component={Link} to={`/catalog/${product.id}`} size=\"small\">View</Button>\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n}","import {\r\n    Card,\r\n    CardActions,\r\n    CardContent,\r\n    CardHeader,\r\n    Grid,\r\n    Skeleton\r\n} from \"@mui/material\";\r\n\r\nexport default function ProductCardSkeleton() {\r\n    return (\r\n        <Grid item xs component={Card}>\r\n            <CardHeader\r\n                avatar={\r\n                    <Skeleton animation=\"wave\" variant=\"circular\" width={40} height={40} />\r\n                }\r\n                title={\r\n                    <Skeleton\r\n                        animation=\"wave\"\r\n                        height={10}\r\n                        width=\"80%\"\r\n                        style={{ marginBottom: 6 }}\r\n                    />\r\n                }\r\n            />\r\n            <Skeleton sx={{ height: 190 }} animation=\"wave\" variant=\"rectangular\" />\r\n            <CardContent>\r\n                <>\r\n                    <Skeleton animation=\"wave\" height={10} style={{ marginBottom: 6 }} />\r\n                    <Skeleton animation=\"wave\" height={10} width=\"80%\" />\r\n                </>\r\n            </CardContent>\r\n            <CardActions>\r\n                <>\r\n                    <Skeleton animation=\"wave\" height={10} width='40%' />\r\n                    <Skeleton animation=\"wave\" height={10} width=\"20%\" />\r\n                </>\r\n            </CardActions>\r\n        </Grid>\r\n    )\r\n}","import { Grid } from '@mui/material';\r\nimport { Product } from '../../app/models/product';\r\nimport { useAppSelector } from '../../app/store/configureStore';\r\nimport ProductCard from './ProductCard';\r\nimport ProductCardSkeleton from './ProductCardSkeleton';\r\n\r\ninterface Props {\r\n    products: Product[];\r\n}\r\n\r\nexport default function ProductList({ products }: Props) {\r\n    const {productsLoaded} = useAppSelector(state => state.catalog);\r\n    return (\r\n        <Grid container spacing={4}>\r\n            {products.map(product => (\r\n                <Grid item xs={4} key={product.id}>\r\n                    {!productsLoaded ? (\r\n                        <ProductCardSkeleton />\r\n                    ) : (\r\n                        <ProductCard product={product} />\r\n                    )}\r\n                </Grid>\r\n            ))}\r\n        </Grid>\r\n    );\r\n}","import { Backdrop, CircularProgress, Typography } from '@mui/material'\r\nimport { Box } from '@mui/system'\r\n\r\ninterface Props {\r\n    message?: string;\r\n};\r\n\r\nexport default function LoadingComponent({ message = 'Loading...'}: Props) {\r\n    return (\r\n        <Backdrop open={true} invisible={true}>\r\n            <Box display='flex' justifyContent='center' alignItems='center' height='100vh'>\r\n                <CircularProgress size={100} color='secondary' />\r\n                <Typography variant='h4' sx={{ justifyContent: 'center', position: 'fixed', top: '60%' }}>{message}</Typography>\r\n            </Box>\r\n        </Backdrop>\r\n    )\r\n}\r\n","import { debounce, TextField } from '@mui/material';\r\nimport { useAppSelector, useAppDispatch } from '../../app/store/configureStore';\r\nimport { setProductParams } from './catalogSlice';\r\nimport { useState } from 'react';\r\n\r\nexport default function ProductSearch() {\r\n    const {productParams} = useAppSelector(state => state.catalog);\r\n    const [searchTerm, setSearchTerm] = useState(productParams.searchTerm);\r\n    const dispatch = useAppDispatch();\r\n\r\n    const debouncedSearch = debounce((event: any) => {\r\n        dispatch(setProductParams({searchTerm: event.target.value}));\r\n    }, 1000)\r\n\r\n    return (\r\n        <TextField\r\n            label='Search products'\r\n            variant='outlined'\r\n            fullWidth\r\n            value={searchTerm || ''}\r\n            onChange={(event: any) => {\r\n                setSearchTerm(event.target.value);\r\n                debouncedSearch(event);\r\n            }}\r\n        />\r\n    )\r\n}\r\n","import { FormControl, FormControlLabel, Radio, RadioGroup } from '@mui/material';\r\n\r\ninterface Props {\r\n    options: any[];\r\n    onChange: (event: any) => void;\r\n    selectedValue: string;\r\n};\r\n\r\nexport default function RadioButtonGroup({options, onChange, selectedValue}: Props) {\r\n    return (\r\n        <FormControl component=\"fieldset\">\r\n            <RadioGroup onChange={onChange} value={selectedValue}>\r\n                {options.map(({value, label}) => (\r\n                    <FormControlLabel value={value} control={<Radio />} label={label} key={value} />\r\n                ))}\r\n            </RadioGroup>\r\n        </FormControl>\r\n    )\r\n}\r\n","import { FormGroup, FormControlLabel, Checkbox } from '@mui/material'\r\nimport { useState } from 'react';\r\n\r\ninterface Props {\r\n    items: string[];\r\n    checked: string[];\r\n    onChange: (items: string[]) => void;\r\n}\r\n\r\nexport default function CheckboxButtons({items, checked, onChange}: Props) {\r\n    const [checkedItems, setCheckedItems] = useState(checked || []);\r\n\r\n    function handleChecked(value: string) {\r\n        const currentIndex = checkedItems.findIndex(item => item === value);\r\n        let newChecked: string[] = [];\r\n\r\n        if (currentIndex === -1) newChecked = [...checkedItems, value];\r\n        else newChecked = checkedItems.filter(item => item !== value);\r\n        setCheckedItems(newChecked);\r\n        onChange(newChecked);\r\n    }\r\n\r\n    return (\r\n        <FormGroup>\r\n            {items.map(item => (\r\n                <FormControlLabel\r\n                    control={<Checkbox\r\n                            checked={checkedItems.indexOf(item) !== -1}\r\n                            onClick={() => handleChecked(item)}\r\n                        />}\r\n                    label={item}\r\n                    key={item}\r\n                />\r\n            ))}\r\n        </FormGroup>\r\n    )\r\n}\r\n","import { Box, Typography, Pagination } from '@mui/material';\r\n\r\nimport { MetaData } from '../models/pagination';\r\n\r\ninterface Props {\r\n    metaData: MetaData;\r\n    onPageChange: (page: number) => void;\r\n}\r\n\r\nexport default function AppPagination({metaData, onPageChange}: Props) {\r\n    const {currentPage, totalPages, totalCount, pageSize} = metaData;\r\n\r\n    return (\r\n        <Box display='flex' justifyContent='space-between' alignItems='center'>\r\n            <Typography>\r\n                Displaying {(currentPage - 1) * pageSize + 1}-\r\n                {currentPage * pageSize > totalCount\r\n                    ? totalCount\r\n                    : currentPage * pageSize} of {totalCount} items\r\n            </Typography>\r\n            <Pagination\r\n                color='secondary'\r\n                size='large'\r\n                count={totalPages}\r\n                page={currentPage}\r\n                onChange={(e, page) => onPageChange(page)}\r\n            />\r\n        </Box>\r\n    )\r\n}\r\n","import { useEffect } from \"react\";\r\nimport { Grid, Paper } from '@mui/material';\r\n\r\nimport ProductList from './ProductList';\r\nimport LoadingComponent from '../../app/layout/LoadingComponent';\r\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\";\r\nimport { fetchProductsAsync, productSelectors, fetchFilters, setProductParams, setPageNumber } from './catalogSlice';\r\nimport ProductSearch from './ProductSearch';\r\nimport RadioButtonGroup from '../../app/components/RadioButtonGroup';\r\nimport CheckboxButtons from '../../app/components/CheckboxButtons';\r\nimport AppPagination from '../../app/components/AppPagination';\r\n\r\nconst sortOptions = [\r\n    { value: 'name', label: 'Alphabetical'},\r\n    { value: 'priceDesc', label: 'Price - High to low'},\r\n    { value: 'price', label: 'Price - Low to high'},\r\n];\r\n\r\nexport default function Catalog() {\r\n    const products = useAppSelector(productSelectors.selectAll);\r\n    const {productsLoaded, filtersLoaded, brands, types, productParams, metaData} = useAppSelector(state => state.catalog);\r\n    const dispatch = useAppDispatch();\r\n\r\n    useEffect(() => {\r\n        if (!productsLoaded) dispatch(fetchProductsAsync());\r\n    }, [dispatch, productsLoaded]);\r\n\r\n    useEffect(() => {\r\n        if (!filtersLoaded) dispatch(fetchFilters());\r\n    }, [dispatch, filtersLoaded]);\r\n\r\n    if (!filtersLoaded) return (<LoadingComponent message='Loading products...' />)\r\n\r\n    return (\r\n        <Grid container columnSpacing={4}>\r\n            <Grid item xs={3}>\r\n                <Paper sx={{ mb: 2 }}>\r\n                    <ProductSearch />\r\n                </Paper>\r\n                <Paper sx={{ mb: 2, p: 2 }}>\r\n                    <RadioButtonGroup\r\n                        selectedValue={productParams.orderBy}\r\n                        options={sortOptions}\r\n                        onChange={(e: any) => dispatch(setProductParams({orderBy: e.target.value}))}\r\n                    />\r\n                </Paper>\r\n\r\n                <Paper sx={{ mb: 2, p: 2 }}>\r\n                    <CheckboxButtons\r\n                        items={brands}\r\n                        checked={productParams.brands || []}\r\n                        onChange={(items: string[]) => dispatch(setProductParams({brands: items}))}\r\n                    />\r\n                </Paper>\r\n\r\n                <Paper sx={{ mb: 2, p: 2 }}>\r\n                    <CheckboxButtons\r\n                        items={types}\r\n                        checked={productParams.types || []}\r\n                        onChange={(items: string[]) => dispatch(setProductParams({types: items}))}\r\n                    />\r\n                </Paper>\r\n            </Grid>\r\n            <Grid item xs={9}>\r\n                <ProductList products={products} />\r\n            </Grid>\r\n            \r\n            <Grid item xs={3}></Grid>\r\n            <Grid item xs={9} sx={{ mb: 2 }}>\r\n                {metaData &&\r\n                <AppPagination\r\n                    metaData={metaData}\r\n                    onPageChange={(page: number) => dispatch(setPageNumber({pageNumber: page}))}\r\n                />}\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}","import { Typography } from '@mui/material';\r\nimport { Box } from '@mui/system';\r\nimport Slider from 'react-slick';\r\n\r\nexport default function HomePage() {\r\n    const settings = {\r\n        dots: true,\r\n        infinite: true,\r\n        speed: 500,\r\n        slidesToShow: 1,\r\n        slidesToScroll: 1\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Slider {...settings}>\r\n                <div>\r\n                    <img src='/images/hero1.jpg' alt='hero' style={{\r\n                        display: 'block',\r\n                        width: '100%',\r\n                        maxHeight: 500\r\n                    }} />\r\n                </div>\r\n                <div>\r\n                    <img src='/images/hero2.jpg' alt='hero' style={{\r\n                        display: 'block',\r\n                        width: '100%',\r\n                        maxHeight: 500\r\n                    }} />\r\n                </div>\r\n                <div>\r\n                    <img src='/images/hero3.jpg' alt='hero' style={{\r\n                        display: 'block',\r\n                        width: '100%',\r\n                        maxHeight: 500\r\n                    }} />\r\n                </div>\r\n            </Slider>\r\n\r\n            <Box display='flex' justifyContent='center' sx={{ p: 4 }}> \r\n                <Typography variant='h1'>\r\n                    Welcome to the shop!\r\n                </Typography>\r\n            </Box>\r\n        </>\r\n    );\r\n}","import { Alert, AlertTitle, Button, ButtonGroup, Container, List, ListItem, ListItemText, Typography } from '@mui/material';\r\nimport { useState } from 'react';\r\nimport agent from '../../app/api/agent';\r\n\r\nexport default function AboutPage() {\r\n    const [validationErrors, setValidationErrors] = useState<string[]>([]);\r\n\r\n    function getValidationError() {\r\n        agent.TestErrors.getValidationError()\r\n            .then(() => console.log('should not see this error'))\r\n            .catch(err => setValidationErrors(err));\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Typography gutterBottom variant='h2'>Errors for testing purposes</Typography>\r\n            <ButtonGroup fullWidth>\r\n                <Button variant='contained' onClick={() => agent.TestErrors.get400Error().catch(err => console.log(err))}>Test 400 Error</Button>\r\n                <Button variant='contained' onClick={() => agent.TestErrors.get401Error().catch(err => console.log(err))}>Test 401 Error</Button>\r\n                <Button variant='contained' onClick={() => agent.TestErrors.get404Error().catch(err => console.log(err))}>Test 404 Error</Button>\r\n                <Button variant='contained' onClick={() => agent.TestErrors.get500Error().catch(err => console.log(err))}>Test 500 Error</Button>\r\n                <Button variant='contained' onClick={getValidationError}>Test Validation Error</Button>\r\n            </ButtonGroup>\r\n            {validationErrors.length > 0 && \r\n                <Alert severity='error'>\r\n                    <AlertTitle>Validation Errors</AlertTitle>\r\n                    <List>\r\n                        {validationErrors.map(error => (\r\n                            <ListItem key={error}>\r\n                                <ListItemText>{error}</ListItemText>\r\n                            </ListItem>\r\n                        ))}\r\n                    </List>\r\n                </Alert>\r\n            }\r\n        </Container>\r\n    );\r\n}","import { Button, ButtonGroup, Typography } from '@mui/material';\r\nimport { useAppDispatch, useAppSelector } from '../../app/store/configureStore';\r\nimport { decrement, increment } from './counterSlice';\r\n// import { useDispatch, useSelector } from 'react-redux';\r\n// import { CounterState, decrement, increment } from './counterReducer';\r\n\r\nexport default function ContactPage() {\r\n    const dispatch = useAppDispatch();\r\n    const {data, title} = useAppSelector(state => state.counter);\r\n\r\n    return (\r\n        <>\r\n            <Typography variant='h2'>\r\n                {title}\r\n            </Typography>\r\n            <Typography variant='h5'>\r\n            The data is: {data} \r\n            </Typography>\r\n            <ButtonGroup>\r\n                <Button onClick={() => dispatch(decrement(1))} variant='contained' color='error'>Decrement</Button>\r\n                <Button onClick={() => dispatch(increment(1))} variant='contained' color='primary'>Increment</Button>\r\n                <Button onClick={() => dispatch(increment(5))} variant='contained' color='secondary'>Increment by 5</Button>\r\n            </ButtonGroup>\r\n        </>\r\n    );\r\n}","import { Button, Container, Divider, Paper, Typography } from '@mui/material'\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function NotFound() {\r\n    return (\r\n        <Container component={Paper} sx={{ height: 400 }}>\r\n            <Typography gutterBottom variant='h3'>Oops - we could not find what you are looking for</Typography>\r\n            <Divider />\r\n            <Button fullWidth component={Link} to='/catalog'>Go back to shop</Button>\r\n        </Container>\r\n    )\r\n}\r\n","import { Divider, Grid, Table, TableBody, TableCell, TableContainer, TableRow, TextField, Typography } from '@mui/material';\r\nimport { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router';\r\n\r\nimport NotFound from '../../app/errors/NotFound';\r\nimport LoadingComponent from '../../app/layout/LoadingComponent';\r\nimport { LoadingButton } from '@mui/lab';\r\nimport { useAppSelector, useAppDispatch } from '../../app/store/configureStore';\r\nimport { addBasketItemAsync, removeBasketItemAsync } from '../basket/basketSlice';\r\nimport { productSelectors, fetchProductAsync } from './catalogSlice';\r\n\r\nexport default function ProductDetails() {\r\n    const {basket, status} = useAppSelector(state => state.basket);\r\n    const dispatch = useAppDispatch();\r\n    const {id} = useParams<{id: string}>();\r\n    const product = useAppSelector(state => productSelectors.selectById(state, id));\r\n    const {status: productStatus} = useAppSelector(state => state.catalog);\r\n    const [quantity, setQuantity] = useState(0);\r\n    const item = basket?.items.find(i => i.productId === product?.id);\r\n\r\n    useEffect(() => {\r\n        if (item) setQuantity(item.quantity);\r\n        if (!product) dispatch(fetchProductAsync(+id));\r\n    }, [dispatch, id, item, product]);\r\n\r\n    function handleInputChange(event: any) {\r\n        if (event.target.value >= 0) {\r\n            setQuantity(+event.target.value);\r\n        }\r\n    }\r\n\r\n    function hanldeUpdateCart() {\r\n        if (!item || quantity > item.quantity) {\r\n            const updateQuantity = item ? quantity - item.quantity : quantity;\r\n            dispatch(addBasketItemAsync({productId: product?.id!, quantity: updateQuantity}));\r\n        }\r\n        else {\r\n            const updateQuantity = item.quantity - quantity;\r\n            dispatch(removeBasketItemAsync({productId: product?.id!, quantity: updateQuantity}));\r\n        }\r\n    }\r\n\r\n    if (productStatus.includes('pendingFetchProduct')) return (<LoadingComponent message='Loading product...' />);\r\n\r\n    if (!product) return (<NotFound />);\r\n\r\n    return (\r\n        <Grid container spacing={6}>\r\n            <Grid item xs={6}>\r\n                <img src={product.pictureUrl} alt={product.name} style={{ width: '100%' }} />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n                <Typography variant='h3'>{product.name}</Typography>\r\n                <Divider sx={{ mb: 2 }} />\r\n                <Typography variant='h4' color='secondary'>{`$${(product.price / 100).toFixed(2)}`}</Typography>\r\n                <Divider sx={{ mb: 2, mt: 2 }} />\r\n                <TableContainer>\r\n                    <Table>\r\n                        <TableBody>\r\n                            <TableRow>\r\n                                <TableCell>Name</TableCell>\r\n                                <TableCell>{product.name}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>Description</TableCell>\r\n                                <TableCell>{product.description}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>Type</TableCell>\r\n                                <TableCell>{product.type}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>Brand</TableCell>\r\n                                <TableCell>{product.brand}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>Quantity in stock</TableCell>\r\n                                <TableCell>{product.quantityInStock}</TableCell>\r\n                            </TableRow>\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={6}>\r\n                        <TextField\r\n                            onChange={handleInputChange}\r\n                            variant='outlined'\r\n                            type='number'\r\n                            label='Quantity in Cart'\r\n                            fullWidth\r\n                            value={quantity}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <LoadingButton\r\n                            disabled={item?.quantity === quantity || (!item && quantity === 0)}\r\n                            loading={status.includes('pending')}\r\n                            onClick={hanldeUpdateCart}\r\n                            sx={{ height: '55px' }}\r\n                            color='primary'\r\n                            size='large'\r\n                            variant='contained'\r\n                            fullWidth\r\n                        >\r\n                            {item ? 'Update Quantity' : 'Add to Cart'}\r\n                        </LoadingButton>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}","import { TableContainer, Paper, Table, TableBody, TableRow, TableCell } from \"@mui/material\";\r\nimport { useAppSelector } from \"../../app/store/configureStore\";\r\nimport { currencyFormat } from '../../app/util/util';\r\n\r\ninterface Props {\r\n    subtotal?: number;\r\n}\r\n\r\nexport default function BasketSummary({subtotal}: Props) {\r\n    const {basket} = useAppSelector(state => state.basket);\r\n    if (subtotal === undefined)\r\n        subtotal = basket?.items.reduce((sum, item) => sum + (item.quantity * item.price), 0) ?? 0;\r\n    const deliveryFee = subtotal > 10000 ? 0 : 500;\r\n\r\n    return (\r\n        <>\r\n            <TableContainer component={Paper} variant={'outlined'}>\r\n                <Table>\r\n                    <TableBody>\r\n                        <TableRow>\r\n                            <TableCell colSpan={2}>Subtotal</TableCell>\r\n                            <TableCell align=\"right\">{currencyFormat(subtotal)}</TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell colSpan={2}>Delivery fee*</TableCell>\r\n                            <TableCell align=\"right\">{currencyFormat(deliveryFee)}</TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell colSpan={2}>Total</TableCell>\r\n                            <TableCell align=\"right\">{currencyFormat(subtotal + deliveryFee)}</TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell>\r\n                                <span style={{fontStyle: 'italic'}}>*Orders over $100 qualify for free delivery</span>\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </>\r\n    )\r\n}","import { Box, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@mui/material';\r\nimport React from 'react';\r\nimport { LoadingButton } from '@mui/lab';\r\nimport { Remove, Delete, Add } from '@mui/icons-material';\r\nimport { useAppSelector, useAppDispatch } from '../../app/store/configureStore';\r\nimport { BasketItem } from '../../app/models/basket';\r\nimport { addBasketItemAsync, removeBasketItemAsync } from './basketSlice';\r\n\r\ninterface Props {\r\n    items: BasketItem[];\r\n    isBasket?: boolean;\r\n}\r\n\r\nexport default function BasketTable({items, isBasket = true}: Props) {\r\n    const {status} = useAppSelector(state => state.basket);\r\n    const dispatch = useAppDispatch();\r\n    \r\n    return (\r\n        <TableContainer component={Paper}>\r\n            <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>Product</TableCell>\r\n                        <TableCell align=\"right\">Price</TableCell>\r\n                        <TableCell align=\"right\">Quantity</TableCell>\r\n                        <TableCell align=\"right\">Subtotal</TableCell>\r\n                        {isBasket &&\r\n                        <TableCell align=\"right\"></TableCell>}                    \r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {items.map((item) => (\r\n                        <TableRow\r\n                            key={item.productId}\r\n                            sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                        >\r\n                            <TableCell component=\"th\" scope=\"row\">\r\n                                <Box display='flex' alignItems='center'>\r\n                                    <img src={item.pictureUrl} alt={item.name} style={{ height: 50, marginRight: 20 }} />\r\n                                    <span>{item.name}</span>\r\n                                </Box>\r\n                            </TableCell>\r\n                            <TableCell align=\"right\">{`$ ${(item.price / 100).toFixed(2)}`}</TableCell>\r\n                            <TableCell align=\"right\">\r\n                                {isBasket &&\r\n                                <LoadingButton\r\n                                    loading={status === 'pendingRemoveItem' + item.productId + 'rem'}\r\n                                    onClick={() => dispatch(removeBasketItemAsync({\r\n                                        productId: item.productId, quantity: 1, name: 'rem'\r\n                                    }))}\r\n                                    color='error'>\r\n                                    <Remove />\r\n                                </LoadingButton>}\r\n                                {item.quantity}\r\n                                {isBasket &&\r\n                                <LoadingButton\r\n                                    loading={status === 'pendingAddItem' + item.productId}\r\n                                    onClick={() => dispatch(addBasketItemAsync({ productId: item.productId }))}\r\n                                    color='secondary'>\r\n                                    <Add />\r\n                                </LoadingButton>}\r\n                            </TableCell>\r\n                            <TableCell align=\"right\">{`$ ${((item.price / 100) * item.quantity).toFixed(2)}`}</TableCell>\r\n                            {isBasket &&\r\n                            <TableCell align=\"right\">\r\n                                <LoadingButton\r\n                                    loading={status === 'pendingRemoveItem' + item.productId + 'del'}\r\n                                    onClick={() => dispatch(removeBasketItemAsync({\r\n                                        productId: item.productId, quantity: item.quantity, name: 'del'\r\n                                    }))}\r\n                                    color='error'>\r\n                                    <Delete />\r\n                                </LoadingButton>\r\n                            </TableCell>}\r\n                        </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    )\r\n}\r\n","import { Button, Grid, Typography } from '@mui/material';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport BasketSummary from './BasketSummary';\r\nimport { useAppSelector } from '../../app/store/configureStore';\r\nimport BasketTable from './BasketTable';\r\n\r\nexport default function BasketPage() {\r\n    const {basket} = useAppSelector(state => state.basket);\r\n\r\n    if (!basket) return <Typography variant='h3'>Your basket is empty</Typography>\r\n\r\n    return (\r\n        <>\r\n            <BasketTable items={basket.items} />\r\n            <Grid container>\r\n                <Grid item xs={6} />\r\n                <Grid item xs={6}>\r\n                    <BasketSummary />\r\n                    <Button\r\n                        component={Link}\r\n                        to='/checkout'\r\n                        variant='contained'\r\n                        size='large'\r\n                        fullWidth\r\n                    >\r\n                        Checkout\r\n                    </Button>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\n","import { Button, Container, Divider, Paper, Typography } from '@mui/material';\r\nimport { useHistory, useLocation } from 'react-router';\r\n\r\nexport default function ServerError() {\r\n    const history = useHistory();\r\n    const {state} = useLocation<any>();\r\n\r\n    return (\r\n        <Container component={Paper}>\r\n            {state?.error ? (\r\n                <>\r\n                    <Typography variant='h3' color='error' gutterBottom>{state.error.title}</Typography>\r\n                    <Divider />\r\n                    <Typography>{state.error.detail || 'Internal server error'}</Typography>\r\n                    <Divider />\r\n                </>\r\n            ) : (\r\n                <>\r\n                    <Typography variant='h5' gutterBottom>Server Error</Typography>\r\n                    <Divider />\r\n                </>\r\n            )}\r\n            <Button onClick={() => history.push('/catalog')}>Go back to the store</Button>\r\n        </Container>\r\n    );\r\n}","import Avatar from '@mui/material/Avatar';\r\nimport TextField from '@mui/material/TextField';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport { Paper } from '@mui/material';\r\nimport { Link } from 'react-router-dom';\r\nimport { FieldValues, useForm } from 'react-hook-form';\r\nimport { LoadingButton } from '@mui/lab';\r\nimport { useHistory, useLocation } from 'react-router';\r\nimport { useAppDispatch } from '../../app/store/configureStore';\r\nimport { signInUser } from './accountSlice';\r\n\r\n\r\nexport default function Login() {\r\n    const history = useHistory();\r\n    const location = useLocation<any>();\r\n    const dispatch = useAppDispatch();\r\n    const {register, handleSubmit, formState: {isSubmitting, errors, isValid}} = useForm({\r\n        mode: 'all'\r\n    });\r\n\r\n    async function submitForm(data: FieldValues) {\r\n        try {\r\n            await dispatch(signInUser(data));\r\n            history.push(location.state?.from?.pathname || '/catalog');\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <Container component={Paper} maxWidth=\"sm\"\r\n            sx={{display: 'flex', flexDirection: 'column', alignItems: 'center', p: 4}}>\r\n            <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\r\n            <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n            Sign in\r\n            </Typography>\r\n            <Box component=\"form\" onSubmit={handleSubmit(submitForm)} noValidate sx={{ mt: 1 }}>\r\n            <TextField\r\n                margin=\"normal\"\r\n                fullWidth\r\n                label=\"Username\"\r\n                autoFocus\r\n                {...register('username', { required: 'Username is required' })}\r\n                error={!!errors.username}\r\n                helperText={errors?.username?.message}\r\n            />\r\n            <TextField\r\n                margin=\"normal\"\r\n                fullWidth\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                {...register('password', { required: 'Password is required' })}\r\n                error={!!errors.password}\r\n                helperText={errors?.password?.message}\r\n            />\r\n            <LoadingButton\r\n                loading={isSubmitting}\r\n                disabled={!isValid}\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                sx={{ mt: 3, mb: 2 }}\r\n            >\r\n                Sign In\r\n            </LoadingButton>\r\n            <Grid container>\r\n                <Grid item>\r\n                <Link to='/register'>\r\n                    {\"Don't have an account? Sign Up\"}\r\n                </Link>\r\n                </Grid>\r\n            </Grid>\r\n            </Box>\r\n        </Container>\r\n    );\r\n}","import Avatar from '@mui/material/Avatar';\r\nimport TextField from '@mui/material/TextField';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport { Paper } from '@mui/material';\r\nimport { Link } from 'react-router-dom';\r\nimport { useForm } from 'react-hook-form';\r\nimport { LoadingButton } from '@mui/lab';\r\nimport { useHistory } from 'react-router';\r\nimport agent from '../../app/api/agent';\r\nimport { toast } from 'react-toastify';\r\n\r\n\r\nexport default function Register() {\r\n    const history = useHistory()\r\n    const {register, handleSubmit, setError, formState: {isSubmitting, errors, isValid}} = useForm({\r\n        mode: 'all'\r\n    });\r\n    \r\n    function handleApiErrors(errors: any) {\r\n        if (errors) {\r\n            errors.forEach((error: string) => {\r\n                if (error.includes('Password')) {\r\n                    setError('password', {message: error});\r\n                } else if (error.includes('Email')) {\r\n                    setError('email', {message: error});\r\n                } else if (error.includes('Username')) {\r\n                    setError('username', {message: error});\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container component={Paper} maxWidth=\"sm\"\r\n            sx={{display: 'flex', flexDirection: 'column', alignItems: 'center', p: 4}}>\r\n            <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\r\n                <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n                Register\r\n            </Typography>\r\n            <Box component=\"form\"\r\n                onSubmit={handleSubmit((data) =>\r\n                    agent.Account.register(data)\r\n                        .then(() => {\r\n                            toast.success('Registration successful - You can now login!');\r\n                            history.push('/login');\r\n                        })\r\n                        .catch((err => handleApiErrors(err))))\r\n                }\r\n                noValidate sx={{ mt: 1 }}>\r\n            <TextField\r\n                margin=\"normal\"\r\n                fullWidth\r\n                label=\"Username\"\r\n                autoFocus\r\n                {...register('username', { required: 'Username is required' })}\r\n                error={!!errors.username}\r\n                helperText={errors?.username?.message}\r\n            />\r\n            <TextField\r\n                margin=\"normal\"\r\n                fullWidth\r\n                label=\"Email Address\"\r\n                {...register('email', {\r\n                    required: 'Email is required',\r\n                    pattern: {\r\n                        value: /^\\w+[\\w-.]*@\\w+((-\\w+)|(\\w*))\\.[a-z]{2,3}$/,\r\n                        message: 'Not a valid email address'\r\n                    }\r\n                })}\r\n                error={!!errors.email}\r\n                helperText={errors?.email?.message}\r\n            />\r\n            <TextField\r\n                margin=\"normal\"\r\n                fullWidth\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                {...register('password', {\r\n                    required: 'Password is required',\r\n                    pattern: {\r\n                        value: /(?=^.{6,10}$)(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%^&amp;*()_+}{&quot;:;'?/&gt;.&lt;,])(?!.*\\s).*$/,\r\n                        message: 'Password does not meet complexity requirements'\r\n                    }\r\n                })}\r\n                error={!!errors.password}\r\n                helperText={errors?.password?.message}\r\n            />\r\n            <LoadingButton\r\n                loading={isSubmitting}\r\n                disabled={!isValid}\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                sx={{ mt: 3, mb: 2 }}\r\n            >\r\n                Register\r\n            </LoadingButton>\r\n            <Grid container>\r\n                <Grid item>\r\n                <Link to='/login'>\r\n                    {\"Already have an account? Sign In\"}\r\n                </Link>\r\n                </Grid>\r\n            </Grid>\r\n            </Box>\r\n        </Container>\r\n    );\r\n}","import React, { ComponentType } from \"react\";\r\nimport { RouteComponentProps, RouteProps } from \"react-router-dom\";\r\nimport { useAppSelector } from '../store/configureStore';\r\nimport { Redirect, Route } from 'react-router';\r\n\r\ninterface Props extends RouteProps {\r\n    component: ComponentType<RouteComponentProps<any>> | ComponentType<any>\r\n}\r\n\r\nexport default function PrivateRoute({ component: Component, ...rest }: Props) {\r\n    const {user} = useAppSelector(state => state.account);\r\n    \r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={props =>\r\n          user ? (\r\n            <Component {...props} />\r\n          ) : (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/login\",\r\n                state: { from: props.location }\r\n              }}\r\n            />\r\n          )\r\n        }\r\n      />\r\n    );\r\n  }","import { Box, Button, Grid, Typography } from '@mui/material'\r\nimport { Order } from '../../app/models/order'\r\nimport BasketTable from '../basket/BasketTable';\r\nimport { BasketItem } from '../../app/models/basket';\r\nimport BasketSummary from '../basket/BasketSummary';\r\n\r\ninterface Props {\r\n    order: Order;\r\n    setSelectedOrder: (id: number) => void;\r\n}\r\n\r\nexport default function OrderDetailed({ order, setSelectedOrder }: Props) {\r\n    const subtotal = order.orderItems.reduce((sum, item) => sum + (item.quantity * item.price), 0) ?? 0;\r\n    return (\r\n        <>\r\n            <Box display='flex' justifyContent='space-between'>\r\n                <Typography sx={{ p: 2 }} gutterBottom variant='h4'>Order# {order.id} - {order.orderStatus}</Typography>\r\n                <Button\r\n                    onClick={() => setSelectedOrder(0)}\r\n                    sx={{ m: 2 }}\r\n                    size='large'\r\n                    variant='contained'\r\n                    color='primary'>\r\n                    Back to Orders\r\n                </Button>\r\n            </Box>\r\n            <BasketTable items={order.orderItems as BasketItem[]} isBasket={false} />\r\n            <Grid container>\r\n                <Grid item xs={6} />\r\n                <Grid item xs={6}>\r\n                    <BasketSummary subtotal={subtotal} />\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\n","import { Button, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@mui/material';\r\nimport { useState, useEffect } from 'react';\r\n\r\nimport agent from '../../app/api/agent';\r\nimport LoadingComponent from '../../app/layout/LoadingComponent';\r\nimport { Order } from '../../app/models/order';\r\nimport { currencyFormat } from '../../app/util/util';\r\nimport OrderDetailed from './OrderDetailed';\r\n\r\nexport default function Orders() {\r\n    const [orders, setOrders] = useState<Order[] | null>(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const [selectedOrderNumber, setSelectedOrderNumber] = useState(0);\r\n\r\n    useEffect(() => {\r\n        agent.Orders.list()\r\n            .then(orders => setOrders(orders))\r\n            .catch(error => console.log(error))\r\n            .finally(() => setLoading(false));\r\n    }, []);\r\n\r\n    if (loading) return <LoadingComponent message=\"Loading orders...\" />\r\n\r\n    if (selectedOrderNumber > 0) return (\r\n        <OrderDetailed\r\n            order={orders?.find(o => o.id === selectedOrderNumber)!}\r\n            setSelectedOrder={setSelectedOrderNumber}\r\n        />\r\n    );\r\n\r\n    return (\r\n        <TableContainer component={Paper}>\r\n            <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>Order Number</TableCell>\r\n                        <TableCell align=\"right\">Total</TableCell>\r\n                        <TableCell align=\"right\">Order Date</TableCell>\r\n                        <TableCell align=\"right\">Order Status</TableCell>\r\n                        <TableCell align=\"right\"></TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {orders?.map((order) => (\r\n                        <TableRow\r\n                            key={order.id}\r\n                            sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                        >\r\n                            <TableCell component=\"th\" scope=\"row\">\r\n                                {order.id}\r\n                            </TableCell>\r\n                            <TableCell align=\"right\">{currencyFormat(order.total)}</TableCell>\r\n                            <TableCell align=\"right\">{order.orderDate.split('T')[0]}</TableCell>\r\n                            <TableCell align=\"right\">{order.orderStatus}</TableCell>\r\n                            <TableCell align=\"right\">\r\n                                <Button onClick={() => setSelectedOrderNumber(order.id)}>\r\n                                    View\r\n                                </Button>\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    )\r\n}\r\n","import TextField from '@mui/material/TextField';\r\nimport { useController, UseControllerProps } from \"react-hook-form\";\r\n\r\ninterface Props extends UseControllerProps {\r\n    label: string;\r\n}\r\n\r\nexport default function AppTextInput(props: Props) {\r\n    const {fieldState, field} = useController({...props, defaultValue: ''});\r\n\r\n    return (\r\n        <TextField\r\n            {...props}\r\n            {...field}\r\n            fullWidth\r\n            variant='outlined'\r\n            error={!!fieldState.error}\r\n            helperText={fieldState.error?.message}\r\n        />\r\n    )\r\n}\r\n","import { Checkbox, FormControlLabel } from \"@mui/material\";\r\nimport { useController, UseControllerProps } from \"react-hook-form\";\r\n\r\ninterface Props extends UseControllerProps {\r\n    label: string;\r\n    disabled: boolean;\r\n}\r\n\r\nexport default function AppCheckbox(props: Props) {\r\n    const {field} = useController({...props, defaultValue: false});\r\n\r\n    return (\r\n        <FormControlLabel\r\n            control={\r\n                <Checkbox\r\n                    {...field}\r\n                    checked={field.value}\r\n                    color='secondary'\r\n                    disabled={props.disabled}\r\n                />\r\n            }\r\n            label={props.label}\r\n        />\r\n    )\r\n}\r\n","import Grid from '@mui/material/Grid';\r\nimport Typography from '@mui/material/Typography';\r\nimport { useFormContext } from 'react-hook-form';\r\nimport AppTextInput from '../../app/components/AppTextInput';\r\nimport AppCheckbox from '../../app/components/AppCheckbox';\r\n\r\nexport default function AddressForm() {\r\n    const {control, formState} = useFormContext();\r\n\r\n    return (\r\n        <>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n                Shipping address\r\n            </Typography>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12} sm={12}>\r\n                    <AppTextInput control={control} name='fullName' label=\"Full Name\" />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <AppTextInput control={control} name='address1' label=\"Address line 1\" />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <AppTextInput control={control} name='address2' label=\"Address line 2\" />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <AppTextInput control={control} name='city' label=\"City\" />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <AppTextInput control={control} name='state' label=\"State/Province/Region\" />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <AppTextInput control={control} name='zip' label=\"Zip/Postal Code\" />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <AppTextInput control={control} name='country' label=\"Country\" />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <AppCheckbox\r\n                        disabled={!formState.isDirty}\r\n                        control={control}\r\n                        name='saveAddress'\r\n                        label=\"Save this as the default address\"\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n}","import { InputBaseComponentProps } from '@mui/material';\r\nimport { forwardRef, Ref, useImperativeHandle, useRef } from 'react';\r\n\r\ninterface Props extends InputBaseComponentProps {}\r\n\r\nexport const StripeInput = forwardRef(function StripeInput({component: Component, ...props}: Props, ref: Ref<unknown>) {\r\n    const elementRef = useRef<any>();\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        focus: () => elementRef.current.focus\r\n    }));\r\n\r\n    return (\r\n        <Component\r\n            onReady={(element: any) => elementRef.current = element}\r\n            {...props}\r\n        />\r\n    );\r\n});","import Typography from '@mui/material/Typography';\r\nimport Grid from '@mui/material/Grid';\r\nimport TextField from '@mui/material/TextField';\r\nimport { useFormContext } from 'react-hook-form';\r\nimport AppTextInput from '../../app/components/AppTextInput';\r\nimport { CardCvcElement, CardExpiryElement, CardNumberElement } from '@stripe/react-stripe-js';\r\nimport { StripeInput } from './StripeInput';\r\nimport { StripeElementType } from '@stripe/stripe-js';\r\n\r\ninterface Props {\r\n  cardState: {elementError: {[key in StripeElementType]?: string}};\r\n  onCardInputChange: (e: any) => void;\r\n}\r\n\r\nexport default function PaymentForm({ cardState, onCardInputChange }: Props) {\r\n  const {control} = useFormContext();\r\n\r\n  return (\r\n    <>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Payment method\r\n      </Typography>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} md={6}>\r\n          <AppTextInput control={control} name='nameOnCard' label='Name on Card' />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <TextField\r\n            onChange={onCardInputChange}\r\n            error={!!cardState.elementError.cardNumber}\r\n            helperText={cardState.elementError.cardNumber}\r\n            id=\"cardNumber\"\r\n            label=\"Card number\"\r\n            fullWidth\r\n            autoComplete=\"cc-number\"\r\n            variant=\"outlined\"\r\n            InputLabelProps={{ shrink: true }}\r\n            InputProps={{\r\n              inputComponent: StripeInput,\r\n              inputProps: {\r\n                component: CardNumberElement\r\n              }\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <TextField\r\n            onChange={onCardInputChange}\r\n            error={!!cardState.elementError.cardExpiry}\r\n            helperText={cardState.elementError.cardExpiry}\r\n            id=\"expDate\"\r\n            label=\"Expiry date\"\r\n            fullWidth\r\n            autoComplete=\"cc-exp\"\r\n            variant=\"outlined\"\r\n            InputLabelProps={{ shrink: true }}\r\n            InputProps={{\r\n              inputComponent: StripeInput,\r\n              inputProps: {\r\n                component: CardExpiryElement\r\n              }\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <TextField\r\n            onChange={onCardInputChange}\r\n            error={!!cardState.elementError.cardCvc}\r\n            helperText={cardState.elementError.cardCvc}\r\n            id=\"cvv\"\r\n            label=\"CVV\"\r\n            fullWidth\r\n            autoComplete=\"cc-csc\"\r\n            variant=\"outlined\"\r\n            InputLabelProps={{ shrink: true }}\r\n            InputProps={{\r\n              inputComponent: StripeInput,\r\n              inputProps: {\r\n                component: CardCvcElement\r\n              }\r\n            }}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}","import Typography from '@mui/material/Typography';\r\nimport Grid from '@mui/material/Grid';\r\nimport BasketSummary from '../basket/BasketSummary';\r\nimport BasketTable from '../basket/BasketTable';\r\nimport { useAppSelector } from '../../app/store/configureStore';\r\n\r\nexport default function Review() {\r\n  const {basket} = useAppSelector(state => state.basket);\r\n  \r\n  return (\r\n    <>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Order summary\r\n      </Typography>\r\n      {basket &&\r\n      <BasketTable items={basket.items} isBasket={false} />}\r\n      <Grid container>\r\n        <Grid item xs={6} />\r\n        <Grid item xs={6} sx={{ paddingTop: 1 }}>\r\n          <BasketSummary />\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}","import * as yup from 'yup';\r\n\r\nexport const validationSchema = [\r\n    yup.object({\r\n        fullName: yup.string().required('Full name is required'),\r\n        address1: yup.string().required('Address line 1 is required'),\r\n        address2: yup.string().required('Address line 2 is required'),\r\n        city: yup.string().required('City is required'),\r\n        state: yup.string().required('State is required'),\r\n        zip: yup.string().required('Zip code is required'),\r\n        country: yup.string().required('Country is required'),\r\n    }),\r\n    yup.object(),\r\n    yup.object({\r\n        nameOnCard: yup.string().required('Name on card is required'),\r\n    })\r\n]","import { Box, Button, Paper, Step, StepLabel, Stepper, Typography } from \"@mui/material\";\r\nimport { useState, useEffect } from 'react';\r\nimport AddressForm from \"./AddressForm\";\r\nimport PaymentForm from \"./PaymentForm\";\r\nimport Review from \"./Review\";\r\nimport { FieldValues, FormProvider, useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport { validationSchema } from './checkoutValidation';\r\nimport agent from '../../app/api/agent';\r\nimport { useAppDispatch, useAppSelector } from '../../app/store/configureStore';\r\nimport { clearBasket } from \"../basket/basketSlice\";\r\nimport { LoadingButton } from '@mui/lab';\r\nimport { StripeElementType } from '@stripe/stripe-js';\r\nimport { useElements, useStripe, CardNumberElement } from '@stripe/react-stripe-js';\r\n\r\nconst steps = ['Shipping address', 'Review your order', 'Payment details'];\r\n\r\nexport default function CheckoutPage() {    \r\n    const [activeStep, setActiveStep] = useState(0);\r\n    const [orderNumber, setOrderNumber] = useState(0);\r\n    const [loading, setLoading] = useState(false);\r\n    const dispatch = useAppDispatch();\r\n    const [cardState, setCardState] = useState<{elementError: {[key in StripeElementType]?: string}}>({elementError: {}});\r\n    const [cardComplete, setCardComplete] = useState<any>({cardNumber: false, cardExpiry: false, cardCvc: false});\r\n    const [paymentMessage, setPaymentMessage] = useState('');\r\n    const [paymentSucceeded, setPaymentSucceeded] = useState(false);\r\n    const {basket} = useAppSelector(state => state.basket);\r\n    const stripe = useStripe();\r\n    const elements = useElements();\r\n  \r\n    function onCardInputChange(e: any) {\r\n      setCardState({\r\n        ...cardState,\r\n        elementError: {\r\n          ...cardState.elementError,\r\n          [e.elementType]: e.error?.message\r\n        }\r\n      });\r\n      setCardComplete({...cardComplete, [e.elementType]: e.complete});\r\n    }\r\n\r\n    function getStepContent(step: number) {\r\n        switch (step) {\r\n            case 0:\r\n                return <AddressForm />;\r\n            case 1:\r\n                return <Review />;\r\n            case 2:\r\n                return <PaymentForm cardState={cardState} onCardInputChange={onCardInputChange} />;\r\n            default:\r\n                throw new Error('Unknown step');\r\n        }\r\n    }\r\n\r\n    const currentValidationSchema = validationSchema[activeStep];\r\n\r\n    const methods = useForm({\r\n        mode: 'all',\r\n        resolver: yupResolver(currentValidationSchema)\r\n    });\r\n\r\n    useEffect(() => {\r\n        agent.Account.fetchAddress()\r\n            .then(response => {\r\n                if (response) {\r\n                    methods.reset({...methods.getValues(), ...response, saveAddress: false});\r\n                }\r\n            });\r\n    }, [methods]);\r\n\r\n    async function submitOrder(data: FieldValues) {\r\n        setLoading(true);\r\n        const {nameOnCard, saveAddress, ...shippingAddress} = data;\r\n        if (!stripe || !elements) return; // Stripe is not ready\r\n\r\n        try {\r\n            const cardElement = elements.getElement(CardNumberElement);\r\n            const paymentResult = await stripe.confirmCardPayment(basket?.clientSecret!, {\r\n                payment_method: {\r\n                    card: cardElement!,\r\n                    billing_details: {\r\n                        name: nameOnCard,\r\n                    }\r\n                }\r\n            });\r\n            console.log(paymentResult);\r\n            if (paymentResult.paymentIntent?.status === 'succeeded') {\r\n                const orderNumber = await agent.Orders.create({saveAddress, shippingAddress});\r\n                setOrderNumber(orderNumber);\r\n                setPaymentSucceeded(true);\r\n                setPaymentMessage('Thank you - We have received your payment!');\r\n                setActiveStep(activeStep + 1);\r\n                dispatch(clearBasket());\r\n                setLoading(false);\r\n            }\r\n            else {\r\n                setPaymentMessage(paymentResult.error?.message!);\r\n                setPaymentSucceeded(false);\r\n                setLoading(false);\r\n                setActiveStep(activeStep + 1);\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    const handleNext = async (data: FieldValues) => {\r\n        if (activeStep === steps.length - 1) {\r\n            await submitOrder(data);\r\n        }\r\n        else {\r\n            setActiveStep(activeStep + 1);\r\n        }\r\n    };\r\n\r\n    const handleBack = () => {\r\n        setActiveStep(activeStep - 1);\r\n    };\r\n\r\n    function submitDisabled(): boolean {\r\n        if (activeStep === steps.length - 1) {\r\n            return !cardComplete.cardNumber\r\n                || !cardComplete.cardExpiry\r\n                || !cardComplete.cardCvc\r\n                || !methods.formState.isValid;\r\n        }\r\n        else {\r\n            return !methods.formState.isValid;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <FormProvider {...methods}>\r\n            <Paper variant=\"outlined\" sx={{my: {xs: 3, md: 6}, p: {xs: 2, md: 3}}}>\r\n                <Typography component=\"h1\" variant=\"h4\" align=\"center\">\r\n                    Checkout\r\n                </Typography>\r\n                <Stepper activeStep={activeStep} sx={{pt: 3, pb: 5}}>\r\n                    {steps.map((label) => (\r\n                        <Step key={label}>\r\n                            <StepLabel>{label}</StepLabel>\r\n                        </Step>\r\n                    ))}\r\n                </Stepper>\r\n                <>\r\n                    {activeStep === steps.length ? (\r\n                        <>\r\n                            <Typography variant=\"h5\" gutterBottom>\r\n                                {paymentMessage}\r\n                            </Typography>\r\n                            {paymentSucceeded ? (\r\n                                <Typography variant=\"subtitle1\">\r\n                                    Your order number is #{orderNumber}. We have not emailed your order\r\n                                    confirmation, and will not send you an update when your order has\r\n                                    shipped as this is a fake store!\r\n                                </Typography>\r\n                            ) : (\r\n                                <Button variant='contained' onClick={handleBack} sx={{mt: 3, ml: 1}}>\r\n                                    Go back and try again!\r\n                                </Button>\r\n                            )}\r\n                        </>\r\n                    ) : (\r\n                        <form onSubmit={methods.handleSubmit(handleNext)}>\r\n                            {getStepContent(activeStep)}\r\n                            <Box sx={{display: 'flex', justifyContent: 'flex-end'}}>\r\n                                {activeStep !== 0 && (\r\n                                    <Button onClick={handleBack} sx={{mt: 3, ml: 1}}>\r\n                                        Back\r\n                                    </Button>\r\n                                )}\r\n                                <LoadingButton\r\n                                    loading={loading}\r\n                                    disabled={submitDisabled()}\r\n                                    variant=\"contained\"\r\n                                    type='submit'\r\n                                    sx={{mt: 3, ml: 1}}\r\n                                >\r\n                                    {activeStep === steps.length - 1 ? 'Place order' : 'Next'}\r\n                                </LoadingButton>\r\n                            </Box>\r\n                        </form>\r\n                    )}\r\n                </>\r\n            </Paper>\r\n        </FormProvider>\r\n    );\r\n}\r\n","import { Elements } from \"@stripe/react-stripe-js\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport { useState, useEffect } from 'react';\r\nimport { useAppDispatch } from \"../../app/store/configureStore\";\r\nimport CheckoutPage from \"./CheckoutPage\";\r\nimport agent from '../../app/api/agent';\r\nimport { setBasket } from \"../basket/basketSlice\";\r\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\r\n\r\nconst stripePromise = loadStripe('pk_test_51IgB4nA0YWUby5DnuuWQ2rEpICQkLfmG0lDVxK2aS6KRZkNEyo22C56zIh2GR1tonNMdRuZ0cjbKiLKeRR0DyAZ600mZiX91a6');\r\n\r\nexport default function CheckoutWrapper() {\r\n    const dispatch = useAppDispatch();\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        agent.Payments.createPaymentIntent()\r\n            .then(basket => dispatch(setBasket(basket)))\r\n            .catch(error => console.log(error))\r\n            .finally(() => setLoading(false));\r\n    }, [dispatch]);\r\n\r\n    if (loading) return <LoadingComponent message='Loading checkout...' />\r\n\r\n    return (\r\n        <Elements stripe={stripePromise}>\r\n            <CheckoutPage />\r\n        </Elements>\r\n    )\r\n}\r\n","import { Container, createTheme, CssBaseline, ThemeProvider } from \"@mui/material\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { Route, Switch } from \"react-router\";\nimport { ToastContainer } from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport Header from './Header';\nimport Catalog from '../../features/catalog/Catalog';\nimport HomePage from '../../features/home/HomePage';\nimport AboutPage from '../../features/about/AboutPage';\nimport ContactPage from '../../features/contact/ContactPage';\nimport ProductDetails from '../../features/catalog/ProductDetails';\nimport BasketPage from '../../features/basket/BasketPage';\nimport ServerError from '../errors/ServerError';\nimport NotFound from '../errors/NotFound';\nimport LoadingComponent from \"./LoadingComponent\";\nimport Login from '../../features/account/Login';\nimport Register from '../../features/account/Register';\nimport { useAppDispatch } from \"../store/configureStore\";\nimport { fetchBasketAsync } from \"../../features/basket/basketSlice\";\nimport { fetchCurrentUser } from '../../features/account/accountSlice';\nimport PrivateRoute from './PrivateRoute';\nimport Orders from '../../features/orders/Orders';\nimport CheckoutWrapper from \"../../features/checkout/CheckoutWrapper\";\n\nfunction App() {\n  const dispatch = useAppDispatch();\n  const [loading, setLoading] = useState(true);\n\n  const initApp = useCallback(async () => {\n    try {\n      await dispatch(fetchCurrentUser());\n      await dispatch(fetchBasketAsync());\n    } catch (error) {\n      console.log(error);\n    }\n  }, [dispatch]);\n\n  useEffect(() => {\n    initApp().then(() => setLoading(false));\n  }, [initApp]);\n\n  const [darkMode, setDarkMode] = useState(false);\n  const paletteType = darkMode ? 'dark' : 'light';\n  const theme = createTheme({\n    palette: {\n      mode: paletteType,\n      background: {\n        default: (paletteType === 'light') ? '#eaeaea' : '#121212'\n      }\n    }\n  });\n\n  const handleThemeChange = () => {\n    setDarkMode(!darkMode);\n  }\n\n  if (loading) return <LoadingComponent message='Initializing app...' />\n\n  return (\n    <ThemeProvider theme={theme}>\n      <ToastContainer position='bottom-right' theme={paletteType} />\n      <CssBaseline />\n      <Header darkMode={darkMode} handleThemeChange={handleThemeChange} />\n      <Route exact path=\"/\" component={HomePage} />\n      <Route path={'/(.+)'} render={() => (\n        <Container sx={{ mt: 4 }}>\n          <Switch>        \n            <Route exact path=\"/catalog\" component={Catalog} />\n            <Route path=\"/catalog/:id\" component={ProductDetails} />\n            <Route path=\"/about\" component={AboutPage} />\n            <Route path=\"/contact\" component={ContactPage} />\n            <Route path=\"/basket\" component={BasketPage} />\n            <PrivateRoute path=\"/checkout\" component={CheckoutWrapper} />\n            <PrivateRoute path=\"/orders\" component={Orders} />\n            <Route path=\"/login\" component={Login} />\n            <Route path=\"/register\" component={Register} />\n            <Route path=\"/server-error\" component={ServerError} />\n            <Route component={NotFound} />\n          </Switch>\n        </Container>\n      )} />\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './app/layout/styles.css';\nimport App from './app/layout/App';\nimport reportWebVitals from './reportWebVitals';\nimport { Router } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport { store } from './app/store/configureStore';\nimport { Provider } from 'react-redux';\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\n\nexport const history = createBrowserHistory();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router history={history}>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}