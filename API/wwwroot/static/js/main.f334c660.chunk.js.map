{"version":3,"sources":["features/contact/counterSlice.ts","app/models/pagination.ts","app/api/agent.ts","app/util/util.ts","features/basket/basketSlice.ts","features/catalog/catalogSlice.ts","features/account/accountSlice.ts","app/store/configureStore.ts","app/layout/SignedInMenu.tsx","app/layout/Header.tsx","features/catalog/ProductCard.tsx","features/catalog/ProductCardSkeleton.tsx","features/catalog/ProductList.tsx","app/layout/LoadingComponent.tsx","features/catalog/ProductSearch.tsx","app/components/RadioButtonGroup.tsx","app/components/CheckboxButtons.tsx","app/components/AppPagination.tsx","app/hooks/useProducts.ts","features/catalog/Catalog.tsx","features/home/HomePage.tsx","features/about/AboutPage.tsx","features/contact/ContactPage.tsx","app/errors/NotFound.tsx","features/catalog/ProductDetails.tsx","features/basket/BasketSummary.tsx","features/basket/BasketTable.tsx","features/basket/BasketPage.tsx","app/errors/ServerError.tsx","features/account/Login.tsx","features/account/Register.tsx","app/layout/PrivateRoute.tsx","features/orders/OrderDetailed.tsx","features/orders/Orders.tsx","app/components/AppTextInput.tsx","app/components/AppCheckbox.tsx","features/checkout/AddressForm.tsx","features/checkout/StripeInput.tsx","features/checkout/PaymentForm.tsx","features/checkout/Review.tsx","features/checkout/checkoutValidation.ts","features/checkout/CheckoutPage.tsx","features/checkout/CheckoutWrapper.tsx","app/components/AppSelectList.tsx","app/components/AppDropzone.tsx","features/admin/productValidation.ts","features/admin/ProductForm.tsx","features/admin/Inventory.tsx","app/layout/App.tsx","reportWebVitals.ts","index.tsx"],"names":["counterSlice","createSlice","name","initialState","data","title","reducers","increment","state","action","payload","decrement","actions","PaginatedResponse","items","metaData","this","axios","defaults","baseURL","process","withCredentials","responseBody","response","interceptors","request","use","config","token","store","getState","account","user","headers","Authorization","a","res","pagination","JSON","parse","err","status","errors","modelStateErrors","key","push","flat","toast","error","history","pathname","Promise","reject","requests","url","params","get","then","body","post","delete","put","createFormData","item","formData","FormData","append","Basket","addItem","productId","quantity","removeItem","agent","Admin","createProduct","product","updateProduct","deleteProduct","id","Catalog","list","details","fetchFilters","TestErrors","get400Error","get401Error","get404Error","get500Error","getValidationError","Account","login","values","register","currentUser","fetchAddress","Orders","fetch","create","Payments","createPaymentIntent","currencyFormat","amount","toFixed","fetchBasketAsync","createAsyncThunk","_","thunkAPI","rejectWithValue","condition","b","document","cookie","match","pop","getCookie","addBasketItemAsync","removeBasketItemAsync","basketSlice","basket","setBasket","clearBasket","extraReducers","builder","addCase","pending","meta","arg","fulfilled","itemIndex","findIndex","i","undefined","splice","rejected","console","log","addMatcher","isAnyOf","productsAdapter","createEntityAdapter","getAxiosParams","productParams","URLSearchParams","pageNumber","toString","pageSize","orderBy","searchTerm","brands","length","types","fetchProductsAsync","catalog","dispatch","setMetaData","fetchProductAsync","catalogSlice","getInitialState","productsLoaded","filtersLoaded","setProductParams","setPageNumber","resetProductParams","setProduct","upsertOne","removeProduct","removeOne","setAll","productSelectors","getSelectors","signInUser","userDTO","localStorage","setItem","stringify","fetchCurrentUser","setUser","getItem","accountSlice","signOut","roles","atob","split","configureStore","reducer","counter","useAppDispatch","useDispatch","useAppSelector","useSelector","SignedInMenu","useState","anchorEl","setAnchorEl","open","Boolean","handleClose","Button","color","onClick","event","currentTarget","sx","typography","email","Menu","onClose","TransitionComponent","Fade","MenuItem","component","Link","to","midLinks","path","rightLinks","navStyles","textDecoration","Header","darkMode","handleThemeChange","itemCount","reduce","sum","AppBar","position","Toolbar","display","justifyContent","alignItems","Box","Typography","variant","NavLink","exact","Switch","checked","onChange","List","map","ListItem","toUpperCase","includes","IconButton","size","Badge","badgeContent","ShoppingCart","ProductCard","Card","CardHeader","avatar","Avatar","bgcolor","charAt","titleTypographyProps","fontWeight","CardMedia","height","backgroundSize","image","pictureUrl","CardContent","gutterBottom","price","brand","type","CardActions","LoadingButton","loading","ProductCardSkeleton","Grid","xs","Skeleton","animation","width","style","marginBottom","ProductList","products","container","spacing","LoadingComponent","message","Backdrop","invisible","CircularProgress","top","ProductSearch","setSearchTerm","debouncedSearch","debounce","target","value","TextField","label","fullWidth","RadioButtonGroup","options","selectedValue","FormControl","RadioGroup","FormControlLabel","control","Radio","CheckboxButtons","checkedItems","setCheckedItems","FormGroup","Checkbox","indexOf","newChecked","filter","handleChecked","AppPagination","onPageChange","currentPage","totalPages","totalCount","Pagination","count","page","e","handlePageChange","useProducts","selectAll","useEffect","sortOptions","columnSpacing","Paper","mb","p","HomePage","dots","infinite","speed","slidesToShow","slidesToScroll","src","alt","maxHeight","AboutPage","validationErrors","setValidationErrors","Container","ButtonGroup","catch","Alert","severity","AlertTitle","ListItemText","ContactPage","NotFound","Divider","ProductDetails","useParams","selectById","productStatus","setQuantity","find","mt","TableContainer","Table","TableBody","TableRow","TableCell","description","quantityInStock","disabled","updateQuantity","BasketSummary","subtotal","deliveryFee","colSpan","align","fontStyle","BasketTable","isBasket","minWidth","TableHead","border","scope","marginRight","Remove","Add","Delete","BasketPage","ServerError","useHistory","useLocation","detail","Login","location","useForm","mode","handleSubmit","formState","isSubmitting","isValid","from","maxWidth","flexDirection","m","onSubmit","noValidate","margin","autoFocus","required","username","helperText","password","Register","setError","success","forEach","handleApiErrors","pattern","PrivateRoute","Component","rest","render","props","some","r","OrderDetailed","order","setSelectedOrder","orderItems","orderStatus","orders","setOrders","setLoading","selectedOrderNumber","setSelectedOrderNumber","finally","o","total","orderDate","AppTextInput","useController","defaultValue","fieldState","field","multiline","rows","AppCheckbox","AddressForm","useFormContext","sm","isDirty","StripeInput","forwardRef","ref","elementRef","useRef","useImperativeHandle","focus","current","onReady","element","PaymentForm","cardState","onCardInputChange","md","elementError","cardNumber","autoComplete","InputLabelProps","shrink","InputProps","inputComponent","inputProps","CardNumberElement","cardExpiry","CardExpiryElement","cardCvc","CardCvcElement","Review","paddingTop","validationSchema","yup","fullName","address1","address2","city","zip","country","nameOnCard","steps","CheckoutPage","activeStep","setActiveStep","orderNumber","setOrderNumber","setCardState","cardComplete","setCardComplete","paymentMessage","setPaymentMessage","paymentSucceeded","setPaymentSucceeded","stripe","useStripe","elements","useElements","elementType","complete","currentValidationSchema","methods","resolver","yupResolver","submitOrder","saveAddress","shippingAddress","cardElement","getElement","confirmCardPayment","clientSecret","payment_method","card","billing_details","paymentResult","paymentIntent","reset","getValues","handleNext","handleBack","my","Stepper","pt","pb","Step","StepLabel","ml","step","Error","getStepContent","stripePromise","loadStripe","CheckoutWrapper","AppSelectList","InputLabel","Select","index","FormHelperText","AppDropzone","dzStyles","borderColor","borderRadius","onDrop","useCallback","acceptedFiles","Object","assign","preview","URL","createObjectURL","useDropzone","getRootProps","getInputProps","isDragActive","UploadFile","fontSize","moreThan","min","file","when","is","ProductForm","cancelEdit","watch","watchFile","revokeObjectURL","Inventory","editMode","setEditMode","selectedProduct","setSelectedProduct","setTarget","handleSelectProduct","startIcon","Edit","App","initApp","setDarkMode","paletteType","theme","createTheme","palette","background","default","ThemeProvider","CssBaseline","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createBrowserHistory","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f334c660.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport interface CounterState {\r\n    data: number;\r\n    title: string;\r\n}\r\n\r\nconst initialState: CounterState = {\r\n    data: 42,\r\n    title: 'YARC (yet another redux counter with redux toolkit)'\r\n}\r\n\r\nexport const counterSlice = createSlice({\r\n    name: 'counter',\r\n    initialState,\r\n    reducers: {\r\n        increment: (state, action) => {\r\n            state.data += action.payload\r\n        },\r\n        decrement: (state, action) => {\r\n            state.data -= action.payload\r\n        },\r\n    }\r\n});\r\n\r\nexport const {increment, decrement} = counterSlice.actions;","export interface MetaData {\r\n    currentPage: number;\r\n    totalPages: number;\r\n    pageSize: number;\r\n    totalCount: number;\r\n}\r\n\r\nexport class PaginatedResponse<T> {\r\n    items: T;\r\n    metaData: MetaData;\r\n\r\n    constructor(items: T, metaData: MetaData) {\r\n        this.items = items;\r\n        this.metaData = metaData;\r\n    }\r\n}","import axios, { AxiosError, AxiosResponse } from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport { setTimeout } from 'timers';\r\nimport { history } from '../..';\r\nimport { PaginatedResponse } from '../models/pagination';\r\nimport { store } from '../store/configureStore';\r\n\r\nconst sleep = () => new Promise(resolve => setTimeout(resolve, 500));\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\naxios.defaults.withCredentials = true;\r\n\r\nconst responseBody = (response: AxiosResponse<any>) => response.data;\r\n\r\naxios.interceptors.request.use(config => {\r\n    const token = store.getState().account.user?.token;\r\n    if (token) config.headers!.Authorization = `Bearer ${token}`;\r\n    return config;\r\n});\r\n\r\naxios.interceptors.response.use(async res => {\r\n    if (process.env.NODE_ENV === 'development') await sleep();\r\n    const pagination = res.headers['pagination'];\r\n    if (pagination) {\r\n        res.data = new PaginatedResponse(res.data, JSON.parse(pagination));\r\n        return res;\r\n    }\r\n    return res;\r\n}, (err: AxiosError) => {\r\n    const {data, status} = err.response as any;\r\n    switch (status) {\r\n        case 400:\r\n            if (data.errors) {\r\n                const modelStateErrors: string[] = [];\r\n                for (const key in data.errors) {\r\n                    if (data.errors[key]) {\r\n                        modelStateErrors.push(data.errors[key]);\r\n                    }\r\n                }\r\n                throw modelStateErrors.flat();\r\n            }\r\n            toast.error(data.title);\r\n            break;\r\n        case 401:\r\n            toast.error(data.title);\r\n            break;\r\n        case 403:\r\n            toast.error('You are not allowed to do this!');\r\n            break;\r\n        case 500:\r\n            history.push({\r\n                pathname: '/server-error',\r\n                state: { error: data }\r\n            });\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    return Promise.reject(err.response);\r\n});\r\n\r\nconst requests = {\r\n    get: (url: string, params?: URLSearchParams) => axios.get(url, {params}).then(responseBody),\r\n    post: (url: string, body: {}) => axios.post(url, body).then(responseBody),\r\n    put: (url: string, body: {}) => axios.put(url, body).then(responseBody),\r\n    delete: (url: string) => axios.delete(url).then(responseBody),\r\n    postForm: (url: string, data: FormData) => axios.post(url, data, {\r\n        headers: {'Content-type': 'multipart/form-data'}\r\n    }).then(responseBody),\r\n    putForm: (url: string, data: FormData) => axios.put(url, data, {\r\n        headers: {'Content-type': 'multipart/form-data'}\r\n    }).then(responseBody),\r\n};\r\n\r\nfunction createFormData(item: any) {\r\n    let formData = new FormData();\r\n    for (const key in item) {\r\n        formData.append(key, item[key]);\r\n    }\r\n    return formData;\r\n}\r\n\r\nconst Admin = {\r\n    createProduct: (product: any) => requests.postForm('products', createFormData(product)),\r\n    updateProduct: (product: any) => requests.putForm('products', createFormData(product)),\r\n    deleteProduct: (id: number) => requests.delete(`products/${id}`),\r\n};\r\n\r\nconst Catalog = {\r\n    list: (params: URLSearchParams) => requests.get('products', params),\r\n    details: (id: number) => requests.get(`products/${id}`),\r\n    fetchFilters: () => requests.get('products/filters'),\r\n};\r\n\r\nconst TestErrors = {\r\n    get400Error: () => requests.get('buggy/bad-request'),\r\n    get401Error: () => requests.get('buggy/unauthorized'),\r\n    get404Error: () => requests.get('buggy/not-found'),\r\n    get500Error: () => requests.get('buggy/server-error'),\r\n    getValidationError: () => requests.get('buggy/validation-error'),\r\n};\r\n\r\nconst Basket = {\r\n    get: () => requests.get('basket'),\r\n    addItem: (productId: number, quantity = 1) => requests.post(`basket?productId=${productId}&quantity=${quantity}`, {}),\r\n    removeItem: (productId: number, quantity = 1) => requests.delete(`basket?productId=${productId}&quantity=${quantity}`),\r\n};\r\n\r\nconst Account = {\r\n    login: (values: any) => requests.post('account/login', values),\r\n    register: (values: any) => requests.post('account/register', values),\r\n    currentUser: () => requests.get('account/currentUser'),\r\n    fetchAddress: () => requests.get('account/savedAddress'),\r\n};\r\n\r\nconst Orders = {\r\n    list: () => requests.get('orders'),\r\n    fetch: (id: number) => requests.get(`orders/${id}`),\r\n    create: (values: any) => requests.post('orders', values)\r\n};\r\n\r\nconst Payments = {\r\n    createPaymentIntent: () => requests.post('payments', {})\r\n};\r\n\r\nconst agent = {\r\n    Admin,\r\n    Catalog,\r\n    TestErrors,\r\n    Basket,\r\n    Account,\r\n    Orders,\r\n    Payments\r\n};\r\n\r\nexport default agent;","export function getCookie(key: string) {\r\n    const b = document.cookie.match(\"(^|;)\\\\s*\" + key + \"\\\\s*=\\\\s*([^;]+)\");\r\n    return b ? b.pop() : \"\";\r\n}\r\n\r\nexport function currencyFormat(amount: number) {\r\n    return `$ ${(amount / 100).toFixed(2)}`;\r\n}","import { createAsyncThunk, createSlice, isAnyOf } from '@reduxjs/toolkit';\r\nimport agent from '../../app/api/agent';\r\nimport { Basket } from '../../app/models/basket';\r\nimport { getCookie } from '../../app/util/util';\r\n\r\ninterface BasketState {\r\n    basket: Basket | null;\r\n    status: string;\r\n}\r\n\r\nconst initialState: BasketState = {\r\n    basket: null,\r\n    status: 'idle'\r\n}\r\n\r\nexport const fetchBasketAsync = createAsyncThunk<Basket>(\r\n    'basket/fetchBasketAsync',\r\n    async (_, thunkAPI) => {\r\n        try {\r\n            return await agent.Basket.get();\r\n        } catch (error: any) {\r\n            return thunkAPI.rejectWithValue({error: error.data})\r\n        }\r\n    },\r\n    {\r\n        condition: () => {\r\n            if (!getCookie('buyerId')) return false;\r\n        }\r\n    }\r\n);\r\n\r\nexport const addBasketItemAsync = createAsyncThunk<Basket, {productId: number, quantity?: number}>(\r\n    'basket/addBasketItemAsync',\r\n    async ({productId, quantity = 1}, thunkAPI) => {\r\n        try {\r\n            return await agent.Basket.addItem(productId, quantity);\r\n        } catch (error: any) {\r\n            return thunkAPI.rejectWithValue({ error: error.data });\r\n        }\r\n    }\r\n);\r\n\r\nexport const removeBasketItemAsync = createAsyncThunk<void, {productId: number, quantity: number, name?: string}>(\r\n    'basket/removeBasketItemAsync',\r\n    async ({productId, quantity}, thunkAPI) => {\r\n        try {\r\n            await agent.Basket.removeItem(productId, quantity);\r\n        } catch (error: any) {\r\n            return thunkAPI.rejectWithValue({ error: error.data });\r\n        }\r\n    }\r\n);\r\n\r\nexport const basketSlice = createSlice({\r\n    name: 'basket',\r\n    initialState,\r\n    reducers: {\r\n        setBasket: (state, action) => {\r\n            state.basket = action.payload\r\n        },\r\n        clearBasket: (state) => {\r\n            state.basket = null;\r\n        },\r\n    },\r\n    extraReducers: (builder => {\r\n        builder.addCase(addBasketItemAsync.pending, (state, action) => {\r\n            // console.log(action);\r\n            state.status = 'pendingAddItem' + action.meta.arg.productId;\r\n        });\r\n        builder.addCase(removeBasketItemAsync.pending, (state, action) => {\r\n            state.status = 'pendingRemoveItem' + action.meta.arg.productId + action.meta.arg.name;\r\n        });\r\n        \r\n        builder.addCase(removeBasketItemAsync.fulfilled, (state, action) => {\r\n            const {productId, quantity} = action.meta.arg;\r\n            const itemIndex = state.basket?.items.findIndex(i => i.productId === productId);\r\n            if (itemIndex === -1 || itemIndex === undefined) return;\r\n            state.basket!.items[itemIndex].quantity -= quantity;\r\n            if (state.basket!.items[itemIndex].quantity === 0) state.basket!.items.splice(itemIndex, 1);\r\n            state.status = 'idle';\r\n        });\r\n        builder.addCase(removeBasketItemAsync.rejected, (state, action) => {\r\n            console.log(action.payload);\r\n            state.status = 'idle';\r\n        });\r\n\r\n        builder.addMatcher(isAnyOf(addBasketItemAsync.fulfilled, fetchBasketAsync.fulfilled), (state, action) => {\r\n            state.basket = action.payload;\r\n            state.status = 'idle';\r\n        });\r\n        builder.addMatcher(isAnyOf(addBasketItemAsync.rejected, fetchBasketAsync.rejected), (state, action) => {\r\n            state.status = 'idle';\r\n            console.log(action.payload);\r\n        });\r\n    })\r\n});\r\n\r\nexport const {setBasket, clearBasket} = basketSlice.actions;","import { createAsyncThunk, createEntityAdapter, createSlice } from '@reduxjs/toolkit'\r\n\r\nimport { Product, ProductParams } from '../../app/models/product';\r\nimport agent from '../../app/api/agent';\r\nimport { RootState } from '../../app/store/configureStore';\r\nimport { MetaData } from '../../app/models/pagination';\r\n\r\ninterface CatalogState {\r\n    productsLoaded: boolean;\r\n    filtersLoaded: boolean;\r\n    status: string;\r\n    brands: string[];\r\n    types: string[];\r\n    productParams: ProductParams;\r\n    metaData: MetaData | null;\r\n};\r\n\r\nconst productsAdapter = createEntityAdapter<Product>();\r\n\r\nfunction getAxiosParams(productParams: ProductParams) {\r\n    const params = new URLSearchParams();\r\n    \r\n    params.append('pageNumber', productParams.pageNumber.toString());\r\n    params.append('pageSize', productParams.pageSize.toString());\r\n    params.append('orderBy', productParams.orderBy);\r\n    if (productParams.searchTerm) params.append('searchTerm', productParams.searchTerm);\r\n    if (productParams.brands.length > 0) params.append('brands', productParams.brands.toString());\r\n    if (productParams.types.length > 0) params.append('types', productParams.types.toString());\r\n    \r\n    return params;\r\n}\r\n\r\nexport const fetchProductsAsync = createAsyncThunk<Product[], void, {state: RootState}>(\r\n    'catalog/fetchProductsAsync',\r\n    async (_, thunkAPI) => {\r\n        const params = getAxiosParams(thunkAPI.getState().catalog.productParams);\r\n        try {\r\n            const res = await agent.Catalog.list(params);\r\n            thunkAPI.dispatch(setMetaData(res.metaData));\r\n\r\n            return res.items;\r\n        } catch (error: any) {\r\n            return thunkAPI.rejectWithValue({ error: error.data });\r\n        }\r\n    }\r\n);\r\n\r\nexport const fetchProductAsync = createAsyncThunk<Product, number>(\r\n    'catalog/fetchProductAsync',\r\n    async (productId: number, thunkAPI) => {\r\n        try {\r\n            return await agent.Catalog.details(productId);\r\n        } catch (error: any) {\r\n            return thunkAPI.rejectWithValue({ error: error.data });\r\n        }\r\n    }\r\n);\r\n\r\nexport const fetchFilters = createAsyncThunk(\r\n    'catalog/fetchFilters',\r\n    async (_, thunkAPI) => {\r\n        try {\r\n            return agent.Catalog.fetchFilters();\r\n        } catch (error: any) {\r\n            return thunkAPI.rejectWithValue({ error: error.data });\r\n        }\r\n    }\r\n);\r\n\r\n\r\nfunction initParams() {\r\n    return {\r\n        pageNumber: 1,\r\n        pageSize: 6,\r\n        orderBy: 'name',\r\n        brands: [],\r\n        types: [],\r\n    };\r\n}\r\n\r\nexport const catalogSlice = createSlice({\r\n    name: 'catalog',\r\n    initialState: productsAdapter.getInitialState<CatalogState>({\r\n        productsLoaded: false,\r\n        filtersLoaded: false,\r\n        status: 'idle',\r\n        brands: [],\r\n        types: [],\r\n        productParams: initParams(),\r\n        metaData: null\r\n    }),\r\n    reducers: {\r\n        setProductParams: (state, action) => {\r\n            state.productsLoaded = false;\r\n            state.productParams = {...state.productParams, ...action.payload, pageNumber: 1};\r\n        },\r\n        setPageNumber: (state, action) => {\r\n            state.productsLoaded = false;\r\n            state.productParams = {...state.productParams, ...action.payload};\r\n        },\r\n        setMetaData: (state, action) => {\r\n            state.metaData = action.payload;\r\n        },\r\n        resetProductParams: (state) => {\r\n            state.productParams = initParams();\r\n        },\r\n        setProduct: (state, action) => {\r\n            productsAdapter.upsertOne(state, action.payload);\r\n            state.productsLoaded = false; // reload data from api\r\n        },\r\n        removeProduct: (state, action) => {\r\n            productsAdapter.removeOne(state, action.payload);\r\n            state.productsLoaded = false; // reload data from api\r\n        }\r\n    },\r\n    extraReducers: (builder => {\r\n        builder.addCase(fetchProductsAsync.pending, (state) => {\r\n            state.status = 'pendingFetchProducts';\r\n        });\r\n        builder.addCase(fetchProductsAsync.fulfilled, (state, action) => {\r\n            productsAdapter.setAll(state, action.payload);\r\n            state.status = 'idle';\r\n            state.productsLoaded = true;\r\n        });\r\n        builder.addCase(fetchProductsAsync.rejected, (state, action) => {\r\n            console.log(action);\r\n            state.status = 'idle';\r\n        });\r\n\r\n        builder.addCase(fetchProductAsync.pending, (state) => {\r\n            state.status = 'pendingFetchProduct';\r\n        });\r\n        builder.addCase(fetchProductAsync.fulfilled, (state, action) => {\r\n            productsAdapter.upsertOne(state, action.payload);\r\n            state.status = 'idle';\r\n        });\r\n        builder.addCase(fetchProductAsync.rejected, (state, action) => {\r\n            console.log(action.payload);\r\n            state.status = 'idle';\r\n        });\r\n\r\n        builder.addCase(fetchFilters.pending, (state) => {\r\n            state.status = 'pendingFetchFilters';\r\n        });\r\n        builder.addCase(fetchFilters.fulfilled, (state, action) => {\r\n            state.brands = action.payload.brands;\r\n            state.types = action.payload.types;\r\n            state.filtersLoaded = true;\r\n        });\r\n        builder.addCase(fetchFilters.rejected, (state, action) => {\r\n            console.log(action.payload);\r\n            state.status = 'idle';\r\n        });\r\n    })\r\n});\r\n\r\nexport const productSelectors = productsAdapter.getSelectors((state: RootState) => state.catalog);\r\n\r\nexport const {setProductParams, setPageNumber, setMetaData, resetProductParams, setProduct, removeProduct} = catalogSlice.actions;","import { createAsyncThunk, createSlice, isAnyOf } from '@reduxjs/toolkit';\r\nimport { FieldValues } from 'react-hook-form';\r\n\r\nimport { User } from '../../app/models/user';\r\nimport agent from '../../app/api/agent';\r\nimport { history } from '../..';\r\nimport { toast } from 'react-toastify';\r\nimport { setBasket } from '../basket/basketSlice';\r\n\r\ninterface AccountState {\r\n    user: User | null;\r\n}\r\n\r\nconst initialState: AccountState = {\r\n    user: null,\r\n}\r\n\r\nexport const signInUser = createAsyncThunk<User, FieldValues>(\r\n    'account/signInUser',\r\n    async (data, thunkAPI) => {\r\n        try {\r\n            const userDTO = await agent.Account.login(data);\r\n            const {basket, ...user} = userDTO;\r\n            if (basket) thunkAPI.dispatch(setBasket(basket));\r\n            localStorage.setItem('user', JSON.stringify(user));\r\n            return user;\r\n        } catch (error: any) {\r\n            return thunkAPI.rejectWithValue({error: error.data});\r\n        }\r\n    }\r\n);\r\n\r\nexport const fetchCurrentUser = createAsyncThunk<User>(\r\n    'account/fetchCurrentUser',\r\n    async (_, thunkAPI) => {\r\n        thunkAPI.dispatch(setUser(JSON.parse(localStorage.getItem('user')!)));\r\n        try {\r\n            const userDTO = await agent.Account.currentUser();\r\n            const {basket, ...user} = userDTO;\r\n            if (basket) thunkAPI.dispatch(setBasket(basket));\r\n            localStorage.setItem('user', JSON.stringify(user));\r\n            return user;\r\n        } catch (error: any) {\r\n            return thunkAPI.rejectWithValue({error: error.data});\r\n        }\r\n    },\r\n    {\r\n        condition: () => {\r\n            if (!localStorage.getItem('user')) return false;\r\n        }\r\n    }\r\n);\r\n\r\nexport const accountSlice = createSlice({\r\n    name: 'account',\r\n    initialState,\r\n    reducers: {\r\n        signOut: (state) => {\r\n            state.user = null;\r\n            localStorage.removeItem('user');\r\n            history.push('/');\r\n        },\r\n        setUser: (state, action) => {\r\n            let claims = JSON.parse(atob(action.payload.token.split('.')[1]));\r\n            let roles = claims['http://schemas.microsoft.com/ws/2008/06/identity/claims/role'];\r\n            state.user = {...action.payload, roles: typeof(roles) === 'string' ? [roles] : roles};\r\n        },\r\n    },\r\n    extraReducers: (builder => {\r\n        builder.addCase(fetchCurrentUser.rejected, (state) => {\r\n            state.user = null;\r\n            localStorage.removeItem('user');\r\n            toast.error('Session expired - Please login again!');\r\n            history.push('/');\r\n        });\r\n        builder.addMatcher(isAnyOf(signInUser.fulfilled, fetchCurrentUser.fulfilled), (state, action) => {\r\n            let claims = JSON.parse(atob(action.payload.token.split('.')[1]));\r\n            let roles = claims['http://schemas.microsoft.com/ws/2008/06/identity/claims/role'];\r\n            state.user = {...action.payload, roles: typeof(roles) === 'string' ? [roles] : roles};\r\n        });\r\n        builder.addMatcher(isAnyOf(signInUser.rejected), (state, action) => {\r\n            throw action.payload;\r\n        });\r\n    })\r\n});\r\n\r\nexport const { signOut, setUser } = accountSlice.actions;","// import { createStore } from 'redux';\r\n// import counterReducer from '../../features/contact/counterReducer';\r\n\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\nimport { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\r\nimport { counterSlice } from '../../features/contact/counterSlice';\r\nimport { basketSlice } from '../../features/basket/basketSlice';\r\nimport { catalogSlice } from '../../features/catalog/catalogSlice';\r\nimport { accountSlice } from '../../features/account/accountSlice';\r\n\r\n// export function configureStore() {\r\n//     return createStore(counterReducer);\r\n// }\r\n\r\n\r\nexport const store = configureStore({\r\n    reducer: {\r\n        counter: counterSlice.reducer,\r\n        basket: basketSlice.reducer,\r\n        catalog: catalogSlice.reducer,\r\n        account: accountSlice.reducer,\r\n    }\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = typeof store.dispatch;\r\n\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;","import React, { useState } from 'react';\r\nimport { Button, Fade, Menu, MenuItem } from '@mui/material';\r\nimport { useAppDispatch, useAppSelector } from '../store/configureStore';\r\nimport { signOut } from '../../features/account/accountSlice';\r\nimport { clearBasket } from '../../features/basket/basketSlice';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function SignedInMenu() {\r\n    const dispatch = useAppDispatch();\r\n    const {user} = useAppSelector(state => state.account);\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const open = Boolean(anchorEl);\r\n    const handleClick = (event: any) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Button\r\n                color='inherit'\r\n                onClick={handleClick}\r\n                sx={{ typography: 'h6' }}\r\n            >\r\n                {user?.email}\r\n            </Button>\r\n            <Menu\r\n                anchorEl={anchorEl}\r\n                open={open}\r\n                onClose={handleClose}\r\n                TransitionComponent={Fade}\r\n            >\r\n                <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n                <MenuItem component={Link} to='/orders'>My orders</MenuItem>\r\n                <MenuItem onClick={() => {\r\n                    dispatch(signOut())\r\n                    dispatch(clearBasket())\r\n                }}>Logout</MenuItem>\r\n            </Menu>\r\n        </>\r\n    );\r\n}\r\n","import { ShoppingCart } from '@mui/icons-material';\r\nimport { AppBar, Badge, IconButton, List, ListItem, Switch, Toolbar, Typography } from '@mui/material';\r\nimport { Box } from '@mui/system';\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport { useAppSelector } from '../store/configureStore';\r\nimport SignedInMenu from './SignedInMenu';\r\n\r\ninterface Props {\r\n    darkMode: boolean;\r\n    handleThemeChange: () => void;\r\n};\r\n\r\nconst midLinks = [\r\n    { title: 'catalog', path: '/catalog' },\r\n    { title: 'about', path: '/about' },\r\n    { title: 'contact', path: '/contact' },\r\n];\r\n\r\nconst rightLinks = [\r\n    { title: 'login', path: '/login' },\r\n    { title: 'register', path: '/register' },\r\n];\r\n\r\nconst navStyles = {\r\n    color: 'inherit',\r\n    textDecoration: 'none',\r\n    typography: 'h6',\r\n    '&:hover': {\r\n        color: 'grey.500'\r\n    },\r\n    '&.active': {\r\n        color: 'text.secondary'\r\n    },\r\n};\r\n\r\nexport default function Header({ darkMode, handleThemeChange }: Props) {\r\n    const {basket} = useAppSelector(state => state.basket);\r\n    const {user} = useAppSelector(state => state.account);\r\n    const itemCount = basket?.items.reduce((sum, item) => sum + item.quantity, 0);\r\n    \r\n    return (\r\n        <AppBar position=\"static\">\r\n            <Toolbar\r\n                sx={{\r\n                    display: 'flex',\r\n                    justifyContent: 'space-between',\r\n                    alignItems: 'center'\r\n                }}>\r\n                <Box display='flex' alignItems='center'>\r\n                    <Typography variant=\"h6\" component={NavLink} to='/' exact sx={navStyles}>\r\n                        React-Store\r\n                    </Typography>\r\n                    <Switch checked={darkMode} onChange={handleThemeChange} color=\"secondary\" />\r\n                </Box>\r\n\r\n                <List sx={{ display: 'flex' }}>\r\n                    {midLinks.map(({ title, path }) => (\r\n                        <ListItem\r\n                            component={NavLink}\r\n                            to={path}\r\n                            key={path}\r\n                            sx={navStyles}\r\n                        >\r\n                            {title.toUpperCase()}\r\n                        </ListItem>\r\n                    ))}\r\n                    {user && user.roles?.includes('Admin') &&\r\n                        <ListItem\r\n                            component={NavLink}\r\n                            to='/inventory'\r\n                            sx={navStyles}\r\n                        >\r\n                            INVENTORY\r\n                        </ListItem>\r\n                    }\r\n                </List>\r\n                \r\n                <Box display='flex' alignItems='center'>\r\n                    <IconButton component={Link} to='/basket' size='large' sx={{ color: 'inherit' }}>\r\n                        <Badge badgeContent={itemCount} color='secondary'>\r\n                            <ShoppingCart />\r\n                        </Badge>\r\n                    </IconButton>\r\n                    {user ? (\r\n                        <SignedInMenu />\r\n                    ) : (\r\n                        <List sx={{ display: 'flex' }}>\r\n                            {rightLinks.map(({ title, path }) => (\r\n                                <ListItem\r\n                                    component={NavLink}\r\n                                    to={path}\r\n                                    key={path}\r\n                                    sx={navStyles}\r\n                                >\r\n                                    {title.toUpperCase()}\r\n                                </ListItem>\r\n                            ))}\r\n                        </List>\r\n                    )}\r\n                </Box>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n}","import { LoadingButton } from '@mui/lab';\r\nimport { Avatar, Button, Card, CardActions, CardContent, CardHeader, CardMedia, Typography } from '@mui/material';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { Product } from '../../app/models/product';\r\nimport { useAppDispatch, useAppSelector } from '../../app/store/configureStore';\r\nimport { currencyFormat } from '../../app/util/util';\r\nimport { addBasketItemAsync } from '../basket/basketSlice';\r\n\r\ninterface Props {\r\n    product: Product;\r\n}\r\n\r\nexport default function ProductCard({ product }: Props) {\r\n    const {status} = useAppSelector(state => state.basket);\r\n    const dispatch = useAppDispatch();\r\n\r\n    return (\r\n        <Card>\r\n            <CardHeader\r\n                avatar={\r\n                    <Avatar sx={{ bgcolor: 'secondary.main' }}>\r\n                        {product.name.charAt(0).toUpperCase()}\r\n                    </Avatar>\r\n                }\r\n                title={product.name}\r\n                titleTypographyProps={{\r\n                    sx: { fontWeight: 'bold', color: 'primary.main' },\r\n                }}\r\n            />\r\n            <CardMedia\r\n                sx={{ height: 140, backgroundSize: 'contain', bgcolor: 'primary.light' }}\r\n                image={product.pictureUrl}\r\n                title={product.name}\r\n            />\r\n            <CardContent>\r\n                <Typography gutterBottom variant=\"h5\" color=\"secondary\">\r\n                    {currencyFormat(product.price)}\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                    {product.brand} / {product.type}\r\n                </Typography>\r\n            </CardContent>\r\n            <CardActions>\r\n                <LoadingButton\r\n                    loading={status.includes('pendingAddItem' + product.id)}\r\n                    onClick={() => dispatch(addBasketItemAsync({productId: product.id}))}\r\n                    size=\"small\">Add to cart</LoadingButton>\r\n                <Button component={Link} to={`/catalog/${product.id}`} size=\"small\">View</Button>\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n}","import {\r\n    Card,\r\n    CardActions,\r\n    CardContent,\r\n    CardHeader,\r\n    Grid,\r\n    Skeleton\r\n} from \"@mui/material\";\r\n\r\nexport default function ProductCardSkeleton() {\r\n    return (\r\n        <Grid item xs component={Card}>\r\n            <CardHeader\r\n                avatar={\r\n                    <Skeleton animation=\"wave\" variant=\"circular\" width={40} height={40} />\r\n                }\r\n                title={\r\n                    <Skeleton\r\n                        animation=\"wave\"\r\n                        height={10}\r\n                        width=\"80%\"\r\n                        style={{ marginBottom: 6 }}\r\n                    />\r\n                }\r\n            />\r\n            <Skeleton sx={{ height: 190 }} animation=\"wave\" variant=\"rectangular\" />\r\n            <CardContent>\r\n                <>\r\n                    <Skeleton animation=\"wave\" height={10} style={{ marginBottom: 6 }} />\r\n                    <Skeleton animation=\"wave\" height={10} width=\"80%\" />\r\n                </>\r\n            </CardContent>\r\n            <CardActions>\r\n                <>\r\n                    <Skeleton animation=\"wave\" height={10} width='40%' />\r\n                    <Skeleton animation=\"wave\" height={10} width=\"20%\" />\r\n                </>\r\n            </CardActions>\r\n        </Grid>\r\n    )\r\n}","import { Grid } from '@mui/material';\r\nimport { Product } from '../../app/models/product';\r\nimport { useAppSelector } from '../../app/store/configureStore';\r\nimport ProductCard from './ProductCard';\r\nimport ProductCardSkeleton from './ProductCardSkeleton';\r\n\r\ninterface Props {\r\n    products: Product[];\r\n}\r\n\r\nexport default function ProductList({ products }: Props) {\r\n    const {productsLoaded} = useAppSelector(state => state.catalog);\r\n    return (\r\n        <Grid container spacing={4}>\r\n            {products.map(product => (\r\n                <Grid item xs={4} key={product.id}>\r\n                    {!productsLoaded ? (\r\n                        <ProductCardSkeleton />\r\n                    ) : (\r\n                        <ProductCard product={product} />\r\n                    )}\r\n                </Grid>\r\n            ))}\r\n        </Grid>\r\n    );\r\n}","import { Backdrop, CircularProgress, Typography } from '@mui/material'\r\nimport { Box } from '@mui/system'\r\n\r\ninterface Props {\r\n    message?: string;\r\n};\r\n\r\nexport default function LoadingComponent({ message = 'Loading...'}: Props) {\r\n    return (\r\n        <Backdrop open={true} invisible={true}>\r\n            <Box display='flex' justifyContent='center' alignItems='center' height='100vh'>\r\n                <CircularProgress size={100} color='secondary' />\r\n                <Typography variant='h4' sx={{ justifyContent: 'center', position: 'fixed', top: '60%' }}>{message}</Typography>\r\n            </Box>\r\n        </Backdrop>\r\n    )\r\n}\r\n","import { debounce, TextField } from '@mui/material';\r\nimport { useAppSelector, useAppDispatch } from '../../app/store/configureStore';\r\nimport { setProductParams } from './catalogSlice';\r\nimport { useState } from 'react';\r\n\r\nexport default function ProductSearch() {\r\n    const {productParams} = useAppSelector(state => state.catalog);\r\n    const [searchTerm, setSearchTerm] = useState(productParams.searchTerm);\r\n    const dispatch = useAppDispatch();\r\n\r\n    const debouncedSearch = debounce((event: any) => {\r\n        dispatch(setProductParams({searchTerm: event.target.value}));\r\n    }, 1000)\r\n\r\n    return (\r\n        <TextField\r\n            label='Search products'\r\n            variant='outlined'\r\n            fullWidth\r\n            value={searchTerm || ''}\r\n            onChange={(event: any) => {\r\n                setSearchTerm(event.target.value);\r\n                debouncedSearch(event);\r\n            }}\r\n        />\r\n    )\r\n}\r\n","import { FormControl, FormControlLabel, Radio, RadioGroup } from '@mui/material';\r\n\r\ninterface Props {\r\n    options: any[];\r\n    onChange: (event: any) => void;\r\n    selectedValue: string;\r\n};\r\n\r\nexport default function RadioButtonGroup({options, onChange, selectedValue}: Props) {\r\n    return (\r\n        <FormControl component=\"fieldset\">\r\n            <RadioGroup onChange={onChange} value={selectedValue}>\r\n                {options.map(({value, label}) => (\r\n                    <FormControlLabel value={value} control={<Radio />} label={label} key={value} />\r\n                ))}\r\n            </RadioGroup>\r\n        </FormControl>\r\n    )\r\n}\r\n","import { FormGroup, FormControlLabel, Checkbox } from '@mui/material'\r\nimport { useState } from 'react';\r\n\r\ninterface Props {\r\n    items: string[];\r\n    checked: string[];\r\n    onChange: (items: string[]) => void;\r\n}\r\n\r\nexport default function CheckboxButtons({items, checked, onChange}: Props) {\r\n    const [checkedItems, setCheckedItems] = useState(checked || []);\r\n\r\n    function handleChecked(value: string) {\r\n        const currentIndex = checkedItems.findIndex(item => item === value);\r\n        let newChecked: string[] = [];\r\n\r\n        if (currentIndex === -1) newChecked = [...checkedItems, value];\r\n        else newChecked = checkedItems.filter(item => item !== value);\r\n        setCheckedItems(newChecked);\r\n        onChange(newChecked);\r\n    }\r\n\r\n    return (\r\n        <FormGroup>\r\n            {items.map(item => (\r\n                <FormControlLabel\r\n                    control={<Checkbox\r\n                            checked={checkedItems.indexOf(item) !== -1}\r\n                            onClick={() => handleChecked(item)}\r\n                        />}\r\n                    label={item}\r\n                    key={item}\r\n                />\r\n            ))}\r\n        </FormGroup>\r\n    )\r\n}\r\n","import { Box, Typography, Pagination } from '@mui/material';\r\n\r\nimport { MetaData } from '../models/pagination';\r\nimport { useState } from 'react';\r\n\r\ninterface Props {\r\n    metaData: MetaData;\r\n    onPageChange: (page: number) => void;\r\n}\r\n\r\nexport default function AppPagination({metaData, onPageChange}: Props) {\r\n    const {currentPage, totalPages, totalCount, pageSize} = metaData;\r\n    const [pageNumber, setPageNumber] = useState(currentPage);\r\n\r\n    function handlePageChange(page: number) {\r\n        setPageNumber(page);\r\n        onPageChange(page);\r\n    }\r\n\r\n    return (\r\n        <Box display='flex' justifyContent='space-between' alignItems='center'>\r\n            <Typography>\r\n                Displaying {(currentPage - 1) * pageSize + 1}-\r\n                {currentPage * pageSize > totalCount\r\n                    ? totalCount\r\n                    : currentPage * pageSize} of {totalCount} items\r\n            </Typography>\r\n            <Pagination\r\n                color='secondary'\r\n                size='large'\r\n                count={totalPages}\r\n                page={pageNumber}\r\n                onChange={(e, page) => handlePageChange(page)}\r\n            />\r\n        </Box>\r\n    )\r\n}\r\n","import { useEffect } from 'react';\r\nimport { productSelectors, fetchProductsAsync, fetchFilters } from '../../features/catalog/catalogSlice';\r\nimport { useAppDispatch, useAppSelector } from '../store/configureStore';\r\n\r\nexport default function useProducts() {\r\n    const products = useAppSelector(productSelectors.selectAll);\r\n    const {productsLoaded, filtersLoaded, brands, types, metaData} = useAppSelector(state => state.catalog);\r\n    const dispatch = useAppDispatch();\r\n\r\n    useEffect(() => {\r\n        if (!productsLoaded) dispatch(fetchProductsAsync());\r\n    }, [dispatch, productsLoaded]);\r\n\r\n    useEffect(() => {\r\n        if (!filtersLoaded) dispatch(fetchFilters());\r\n    }, [dispatch, filtersLoaded]);\r\n\r\n    return {\r\n        products,\r\n        productsLoaded,\r\n        filtersLoaded,\r\n        brands,\r\n        types,\r\n        metaData,\r\n    };\r\n}","import { Grid, Paper } from '@mui/material';\r\n\r\nimport ProductList from './ProductList';\r\nimport LoadingComponent from '../../app/layout/LoadingComponent';\r\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\";\r\nimport { setProductParams, setPageNumber } from './catalogSlice';\r\nimport ProductSearch from './ProductSearch';\r\nimport RadioButtonGroup from '../../app/components/RadioButtonGroup';\r\nimport CheckboxButtons from '../../app/components/CheckboxButtons';\r\nimport AppPagination from '../../app/components/AppPagination';\r\nimport useProducts from '../../app/hooks/useProducts';\r\n\r\nconst sortOptions = [\r\n    { value: 'name', label: 'Alphabetical'},\r\n    { value: 'priceDesc', label: 'Price - High to low'},\r\n    { value: 'price', label: 'Price - Low to high'},\r\n];\r\n\r\nexport default function Catalog() {\r\n    const {products, brands, types, filtersLoaded, metaData} = useProducts();\r\n    const {productParams} = useAppSelector(state => state.catalog);\r\n    const dispatch = useAppDispatch();\r\n\r\n    if (!filtersLoaded) return (<LoadingComponent message='Loading products...' />)\r\n\r\n    return (\r\n        <Grid container columnSpacing={4}>\r\n            <Grid item xs={3}>\r\n                <Paper sx={{ mb: 2 }}>\r\n                    <ProductSearch />\r\n                </Paper>\r\n                <Paper sx={{ mb: 2, p: 2 }}>\r\n                    <RadioButtonGroup\r\n                        selectedValue={productParams.orderBy}\r\n                        options={sortOptions}\r\n                        onChange={(e: any) => dispatch(setProductParams({orderBy: e.target.value}))}\r\n                    />\r\n                </Paper>\r\n\r\n                <Paper sx={{ mb: 2, p: 2 }}>\r\n                    <CheckboxButtons\r\n                        items={brands}\r\n                        checked={productParams.brands || []}\r\n                        onChange={(items: string[]) => dispatch(setProductParams({brands: items}))}\r\n                    />\r\n                </Paper>\r\n\r\n                <Paper sx={{ mb: 2, p: 2 }}>\r\n                    <CheckboxButtons\r\n                        items={types}\r\n                        checked={productParams.types || []}\r\n                        onChange={(items: string[]) => dispatch(setProductParams({types: items}))}\r\n                    />\r\n                </Paper>\r\n            </Grid>\r\n            <Grid item xs={9}>\r\n                <ProductList products={products} />\r\n            </Grid>\r\n            \r\n            <Grid item xs={3}></Grid>\r\n            <Grid item xs={9} sx={{ mb: 2 }}>\r\n                {metaData &&\r\n                <AppPagination\r\n                    metaData={metaData}\r\n                    onPageChange={(page: number) => dispatch(setPageNumber({pageNumber: page}))}\r\n                />}\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}","import { Typography } from '@mui/material';\r\nimport { Box } from '@mui/system';\r\nimport Slider from 'react-slick';\r\n\r\nexport default function HomePage() {\r\n    const settings = {\r\n        dots: true,\r\n        infinite: true,\r\n        speed: 500,\r\n        slidesToShow: 1,\r\n        slidesToScroll: 1\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Slider {...settings}>\r\n                <div>\r\n                    <img src='/images/hero1.jpg' alt='hero' style={{\r\n                        display: 'block',\r\n                        width: '100%',\r\n                        maxHeight: 500\r\n                    }} />\r\n                </div>\r\n                <div>\r\n                    <img src='/images/hero2.jpg' alt='hero' style={{\r\n                        display: 'block',\r\n                        width: '100%',\r\n                        maxHeight: 500\r\n                    }} />\r\n                </div>\r\n                <div>\r\n                    <img src='/images/hero3.jpg' alt='hero' style={{\r\n                        display: 'block',\r\n                        width: '100%',\r\n                        maxHeight: 500\r\n                    }} />\r\n                </div>\r\n            </Slider>\r\n\r\n            <Box display='flex' justifyContent='center' sx={{ p: 4 }}> \r\n                <Typography variant='h1'>\r\n                    Welcome to the shop!\r\n                </Typography>\r\n            </Box>\r\n        </>\r\n    );\r\n}","import { Alert, AlertTitle, Button, ButtonGroup, Container, List, ListItem, ListItemText, Typography } from '@mui/material';\r\nimport { useState } from 'react';\r\nimport agent from '../../app/api/agent';\r\n\r\nexport default function AboutPage() {\r\n    const [validationErrors, setValidationErrors] = useState<string[]>([]);\r\n\r\n    function getValidationError() {\r\n        agent.TestErrors.getValidationError()\r\n            .then(() => console.log('should not see this error'))\r\n            .catch(err => setValidationErrors(err));\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Typography gutterBottom variant='h2'>Errors for testing purposes</Typography>\r\n            <ButtonGroup fullWidth>\r\n                <Button variant='contained' onClick={() => agent.TestErrors.get400Error().catch(err => console.log(err))}>Test 400 Error</Button>\r\n                <Button variant='contained' onClick={() => agent.TestErrors.get401Error().catch(err => console.log(err))}>Test 401 Error</Button>\r\n                <Button variant='contained' onClick={() => agent.TestErrors.get404Error().catch(err => console.log(err))}>Test 404 Error</Button>\r\n                <Button variant='contained' onClick={() => agent.TestErrors.get500Error().catch(err => console.log(err))}>Test 500 Error</Button>\r\n                <Button variant='contained' onClick={getValidationError}>Test Validation Error</Button>\r\n            </ButtonGroup>\r\n            {validationErrors.length > 0 && \r\n                <Alert severity='error'>\r\n                    <AlertTitle>Validation Errors</AlertTitle>\r\n                    <List>\r\n                        {validationErrors.map(error => (\r\n                            <ListItem key={error}>\r\n                                <ListItemText>{error}</ListItemText>\r\n                            </ListItem>\r\n                        ))}\r\n                    </List>\r\n                </Alert>\r\n            }\r\n        </Container>\r\n    );\r\n}","import { Button, ButtonGroup, Typography } from '@mui/material';\r\nimport { useAppDispatch, useAppSelector } from '../../app/store/configureStore';\r\nimport { decrement, increment } from './counterSlice';\r\n// import { useDispatch, useSelector } from 'react-redux';\r\n// import { CounterState, decrement, increment } from './counterReducer';\r\n\r\nexport default function ContactPage() {\r\n    const dispatch = useAppDispatch();\r\n    const {data, title} = useAppSelector(state => state.counter);\r\n\r\n    return (\r\n        <>\r\n            <Typography variant='h2'>\r\n                {title}\r\n            </Typography>\r\n            <Typography variant='h5'>\r\n            The data is: {data} \r\n            </Typography>\r\n            <ButtonGroup>\r\n                <Button onClick={() => dispatch(decrement(1))} variant='contained' color='error'>Decrement</Button>\r\n                <Button onClick={() => dispatch(increment(1))} variant='contained' color='primary'>Increment</Button>\r\n                <Button onClick={() => dispatch(increment(5))} variant='contained' color='secondary'>Increment by 5</Button>\r\n            </ButtonGroup>\r\n        </>\r\n    );\r\n}","import { Button, Container, Divider, Paper, Typography } from '@mui/material'\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function NotFound() {\r\n    return (\r\n        <Container component={Paper} sx={{ height: 400 }}>\r\n            <Typography gutterBottom variant='h3'>Oops - we could not find what you are looking for</Typography>\r\n            <Divider />\r\n            <Button fullWidth component={Link} to='/catalog'>Go back to shop</Button>\r\n        </Container>\r\n    )\r\n}\r\n","import { Divider, Grid, Table, TableBody, TableCell, TableContainer, TableRow, TextField, Typography } from '@mui/material';\r\nimport { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router';\r\n\r\nimport NotFound from '../../app/errors/NotFound';\r\nimport LoadingComponent from '../../app/layout/LoadingComponent';\r\nimport { LoadingButton } from '@mui/lab';\r\nimport { useAppSelector, useAppDispatch } from '../../app/store/configureStore';\r\nimport { addBasketItemAsync, removeBasketItemAsync } from '../basket/basketSlice';\r\nimport { productSelectors, fetchProductAsync } from './catalogSlice';\r\n\r\nexport default function ProductDetails() {\r\n    const {basket, status} = useAppSelector(state => state.basket);\r\n    const dispatch = useAppDispatch();\r\n    const {id} = useParams<{id: string}>();\r\n    const product = useAppSelector(state => productSelectors.selectById(state, id));\r\n    const {status: productStatus} = useAppSelector(state => state.catalog);\r\n    const [quantity, setQuantity] = useState(0);\r\n    const item = basket?.items.find(i => i.productId === product?.id);\r\n\r\n    useEffect(() => {\r\n        if (item) setQuantity(item.quantity);\r\n        if (!product) dispatch(fetchProductAsync(+id));\r\n    }, [dispatch, id, item, product]);\r\n\r\n    function handleInputChange(event: any) {\r\n        if (event.target.value >= 0) {\r\n            setQuantity(+event.target.value);\r\n        }\r\n    }\r\n\r\n    function hanldeUpdateCart() {\r\n        if (!item || quantity > item.quantity) {\r\n            const updateQuantity = item ? quantity - item.quantity : quantity;\r\n            dispatch(addBasketItemAsync({productId: product?.id!, quantity: updateQuantity}));\r\n        }\r\n        else {\r\n            const updateQuantity = item.quantity - quantity;\r\n            dispatch(removeBasketItemAsync({productId: product?.id!, quantity: updateQuantity}));\r\n        }\r\n    }\r\n\r\n    if (productStatus.includes('pendingFetchProduct')) return (<LoadingComponent message='Loading product...' />);\r\n\r\n    if (!product) return (<NotFound />);\r\n\r\n    return (\r\n        <Grid container spacing={6}>\r\n            <Grid item xs={6}>\r\n                <img src={product.pictureUrl} alt={product.name} style={{ width: '100%' }} />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n                <Typography variant='h3'>{product.name}</Typography>\r\n                <Divider sx={{ mb: 2 }} />\r\n                <Typography variant='h4' color='secondary'>{`$${(product.price / 100).toFixed(2)}`}</Typography>\r\n                <Divider sx={{ mb: 2, mt: 2 }} />\r\n                <TableContainer>\r\n                    <Table>\r\n                        <TableBody>\r\n                            <TableRow>\r\n                                <TableCell>Name</TableCell>\r\n                                <TableCell>{product.name}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>Description</TableCell>\r\n                                <TableCell>{product.description}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>Type</TableCell>\r\n                                <TableCell>{product.type}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>Brand</TableCell>\r\n                                <TableCell>{product.brand}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>Quantity in stock</TableCell>\r\n                                <TableCell>{product.quantityInStock}</TableCell>\r\n                            </TableRow>\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={6}>\r\n                        <TextField\r\n                            onChange={handleInputChange}\r\n                            variant='outlined'\r\n                            type='number'\r\n                            label='Quantity in Cart'\r\n                            fullWidth\r\n                            value={quantity}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <LoadingButton\r\n                            disabled={item?.quantity === quantity || (!item && quantity === 0)}\r\n                            loading={status.includes('pending')}\r\n                            onClick={hanldeUpdateCart}\r\n                            sx={{ height: '55px' }}\r\n                            color='primary'\r\n                            size='large'\r\n                            variant='contained'\r\n                            fullWidth\r\n                        >\r\n                            {item ? 'Update Quantity' : 'Add to Cart'}\r\n                        </LoadingButton>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}","import { TableContainer, Paper, Table, TableBody, TableRow, TableCell } from \"@mui/material\";\r\nimport { useAppSelector } from \"../../app/store/configureStore\";\r\nimport { currencyFormat } from '../../app/util/util';\r\n\r\ninterface Props {\r\n    subtotal?: number;\r\n}\r\n\r\nexport default function BasketSummary({subtotal}: Props) {\r\n    const {basket} = useAppSelector(state => state.basket);\r\n    if (subtotal === undefined)\r\n        subtotal = basket?.items.reduce((sum, item) => sum + (item.quantity * item.price), 0) ?? 0;\r\n    const deliveryFee = subtotal > 10000 ? 0 : 500;\r\n\r\n    return (\r\n        <>\r\n            <TableContainer component={Paper} variant={'outlined'}>\r\n                <Table>\r\n                    <TableBody>\r\n                        <TableRow>\r\n                            <TableCell colSpan={2}>Subtotal</TableCell>\r\n                            <TableCell align=\"right\">{currencyFormat(subtotal)}</TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell colSpan={2}>Delivery fee*</TableCell>\r\n                            <TableCell align=\"right\">{currencyFormat(deliveryFee)}</TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell colSpan={2}>Total</TableCell>\r\n                            <TableCell align=\"right\">{currencyFormat(subtotal + deliveryFee)}</TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell>\r\n                                <span style={{fontStyle: 'italic'}}>*Orders over $100 qualify for free delivery</span>\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </>\r\n    )\r\n}","import { Box, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@mui/material';\r\nimport React from 'react';\r\nimport { LoadingButton } from '@mui/lab';\r\nimport { Remove, Delete, Add } from '@mui/icons-material';\r\nimport { useAppSelector, useAppDispatch } from '../../app/store/configureStore';\r\nimport { BasketItem } from '../../app/models/basket';\r\nimport { addBasketItemAsync, removeBasketItemAsync } from './basketSlice';\r\n\r\ninterface Props {\r\n    items: BasketItem[];\r\n    isBasket?: boolean;\r\n}\r\n\r\nexport default function BasketTable({items, isBasket = true}: Props) {\r\n    const {status} = useAppSelector(state => state.basket);\r\n    const dispatch = useAppDispatch();\r\n    \r\n    return (\r\n        <TableContainer component={Paper}>\r\n            <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>Product</TableCell>\r\n                        <TableCell align=\"right\">Price</TableCell>\r\n                        <TableCell align=\"right\">Quantity</TableCell>\r\n                        <TableCell align=\"right\">Subtotal</TableCell>\r\n                        {isBasket &&\r\n                        <TableCell align=\"right\"></TableCell>}                    \r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {items.map((item) => (\r\n                        <TableRow\r\n                            key={item.productId}\r\n                            sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                        >\r\n                            <TableCell component=\"th\" scope=\"row\">\r\n                                <Box display='flex' alignItems='center'>\r\n                                    <img src={item.pictureUrl} alt={item.name} style={{ height: 50, marginRight: 20 }} />\r\n                                    <span>{item.name}</span>\r\n                                </Box>\r\n                            </TableCell>\r\n                            <TableCell align=\"right\">{`$ ${(item.price / 100).toFixed(2)}`}</TableCell>\r\n                            <TableCell align=\"right\">\r\n                                {isBasket &&\r\n                                <LoadingButton\r\n                                    loading={status === 'pendingRemoveItem' + item.productId + 'rem'}\r\n                                    onClick={() => dispatch(removeBasketItemAsync({\r\n                                        productId: item.productId, quantity: 1, name: 'rem'\r\n                                    }))}\r\n                                    color='error'>\r\n                                    <Remove />\r\n                                </LoadingButton>}\r\n                                {item.quantity}\r\n                                {isBasket &&\r\n                                <LoadingButton\r\n                                    loading={status === 'pendingAddItem' + item.productId}\r\n                                    onClick={() => dispatch(addBasketItemAsync({ productId: item.productId }))}\r\n                                    color='secondary'>\r\n                                    <Add />\r\n                                </LoadingButton>}\r\n                            </TableCell>\r\n                            <TableCell align=\"right\">{`$ ${((item.price / 100) * item.quantity).toFixed(2)}`}</TableCell>\r\n                            {isBasket &&\r\n                            <TableCell align=\"right\">\r\n                                <LoadingButton\r\n                                    loading={status === 'pendingRemoveItem' + item.productId + 'del'}\r\n                                    onClick={() => dispatch(removeBasketItemAsync({\r\n                                        productId: item.productId, quantity: item.quantity, name: 'del'\r\n                                    }))}\r\n                                    color='error'>\r\n                                    <Delete />\r\n                                </LoadingButton>\r\n                            </TableCell>}\r\n                        </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    )\r\n}\r\n","import { Button, Grid, Typography } from '@mui/material';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport BasketSummary from './BasketSummary';\r\nimport { useAppSelector } from '../../app/store/configureStore';\r\nimport BasketTable from './BasketTable';\r\n\r\nexport default function BasketPage() {\r\n    const {basket} = useAppSelector(state => state.basket);\r\n\r\n    if (!basket) return <Typography variant='h3'>Your basket is empty</Typography>\r\n\r\n    return (\r\n        <>\r\n            <BasketTable items={basket.items} />\r\n            <Grid container>\r\n                <Grid item xs={6} />\r\n                <Grid item xs={6}>\r\n                    <BasketSummary />\r\n                    <Button\r\n                        component={Link}\r\n                        to='/checkout'\r\n                        variant='contained'\r\n                        size='large'\r\n                        fullWidth\r\n                    >\r\n                        Checkout\r\n                    </Button>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\n","import { Button, Container, Divider, Paper, Typography } from '@mui/material';\r\nimport { useHistory, useLocation } from 'react-router';\r\n\r\nexport default function ServerError() {\r\n    const history = useHistory();\r\n    const {state} = useLocation<any>();\r\n\r\n    return (\r\n        <Container component={Paper}>\r\n            {state?.error ? (\r\n                <>\r\n                    <Typography variant='h3' color='error' gutterBottom>{state.error.title}</Typography>\r\n                    <Divider />\r\n                    <Typography>{state.error.detail || 'Internal server error'}</Typography>\r\n                    <Divider />\r\n                </>\r\n            ) : (\r\n                <>\r\n                    <Typography variant='h5' gutterBottom>Server Error</Typography>\r\n                    <Divider />\r\n                </>\r\n            )}\r\n            <Button onClick={() => history.push('/catalog')}>Go back to the store</Button>\r\n        </Container>\r\n    );\r\n}","import Avatar from '@mui/material/Avatar';\r\nimport TextField from '@mui/material/TextField';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport { Paper } from '@mui/material';\r\nimport { Link } from 'react-router-dom';\r\nimport { FieldValues, useForm } from 'react-hook-form';\r\nimport { LoadingButton } from '@mui/lab';\r\nimport { useHistory, useLocation } from 'react-router';\r\nimport { useAppDispatch } from '../../app/store/configureStore';\r\nimport { signInUser } from './accountSlice';\r\n\r\n\r\nexport default function Login() {\r\n    const history = useHistory();\r\n    const location = useLocation<any>();\r\n    const dispatch = useAppDispatch();\r\n    const {register, handleSubmit, formState: {isSubmitting, errors, isValid}} = useForm({\r\n        mode: 'all'\r\n    });\r\n\r\n    async function submitForm(data: FieldValues) {\r\n        try {\r\n            await dispatch(signInUser(data));\r\n            history.push(location.state?.from?.pathname || '/catalog');\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <Container component={Paper} maxWidth=\"sm\"\r\n            sx={{display: 'flex', flexDirection: 'column', alignItems: 'center', p: 4}}>\r\n            <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\r\n            <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n            Sign in\r\n            </Typography>\r\n            <Box component=\"form\" onSubmit={handleSubmit(submitForm)} noValidate sx={{ mt: 1 }}>\r\n            <TextField\r\n                margin=\"normal\"\r\n                fullWidth\r\n                label=\"Username\"\r\n                autoFocus\r\n                {...register('username', { required: 'Username is required' })}\r\n                error={!!errors.username}\r\n                helperText={errors?.username?.message}\r\n            />\r\n            <TextField\r\n                margin=\"normal\"\r\n                fullWidth\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                {...register('password', { required: 'Password is required' })}\r\n                error={!!errors.password}\r\n                helperText={errors?.password?.message}\r\n            />\r\n            <LoadingButton\r\n                loading={isSubmitting}\r\n                disabled={!isValid}\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                sx={{ mt: 3, mb: 2 }}\r\n            >\r\n                Sign In\r\n            </LoadingButton>\r\n            <Grid container>\r\n                <Grid item>\r\n                <Link to='/register'>\r\n                    {\"Don't have an account? Sign Up\"}\r\n                </Link>\r\n                </Grid>\r\n            </Grid>\r\n            </Box>\r\n        </Container>\r\n    );\r\n}","import Avatar from '@mui/material/Avatar';\r\nimport TextField from '@mui/material/TextField';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport { Paper } from '@mui/material';\r\nimport { Link } from 'react-router-dom';\r\nimport { useForm } from 'react-hook-form';\r\nimport { LoadingButton } from '@mui/lab';\r\nimport { useHistory } from 'react-router';\r\nimport agent from '../../app/api/agent';\r\nimport { toast } from 'react-toastify';\r\n\r\n\r\nexport default function Register() {\r\n    const history = useHistory()\r\n    const {register, handleSubmit, setError, formState: {isSubmitting, errors, isValid}} = useForm({\r\n        mode: 'all'\r\n    });\r\n    \r\n    function handleApiErrors(errors: any) {\r\n        if (errors) {\r\n            errors.forEach((error: string) => {\r\n                if (error.includes('Password')) {\r\n                    setError('password', {message: error});\r\n                } else if (error.includes('Email')) {\r\n                    setError('email', {message: error});\r\n                } else if (error.includes('Username')) {\r\n                    setError('username', {message: error});\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container component={Paper} maxWidth=\"sm\"\r\n            sx={{display: 'flex', flexDirection: 'column', alignItems: 'center', p: 4}}>\r\n            <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\r\n                <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n                Register\r\n            </Typography>\r\n            <Box component=\"form\"\r\n                onSubmit={handleSubmit((data) =>\r\n                    agent.Account.register(data)\r\n                        .then(() => {\r\n                            toast.success('Registration successful - You can now login!');\r\n                            history.push('/login');\r\n                        })\r\n                        .catch((err => handleApiErrors(err))))\r\n                }\r\n                noValidate sx={{ mt: 1 }}>\r\n            <TextField\r\n                margin=\"normal\"\r\n                fullWidth\r\n                label=\"Username\"\r\n                autoFocus\r\n                {...register('username', { required: 'Username is required' })}\r\n                error={!!errors.username}\r\n                helperText={errors?.username?.message}\r\n            />\r\n            <TextField\r\n                margin=\"normal\"\r\n                fullWidth\r\n                label=\"Email Address\"\r\n                {...register('email', {\r\n                    required: 'Email is required',\r\n                    pattern: {\r\n                        value: /^\\w+[\\w-.]*@\\w+((-\\w+)|(\\w*))\\.[a-z]{2,3}$/,\r\n                        message: 'Not a valid email address'\r\n                    }\r\n                })}\r\n                error={!!errors.email}\r\n                helperText={errors?.email?.message}\r\n            />\r\n            <TextField\r\n                margin=\"normal\"\r\n                fullWidth\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                {...register('password', {\r\n                    required: 'Password is required',\r\n                    pattern: {\r\n                        value: /(?=^.{6,10}$)(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%^&amp;*()_+}{&quot;:;'?/&gt;.&lt;,])(?!.*\\s).*$/,\r\n                        message: 'Password does not meet complexity requirements'\r\n                    }\r\n                })}\r\n                error={!!errors.password}\r\n                helperText={errors?.password?.message}\r\n            />\r\n            <LoadingButton\r\n                loading={isSubmitting}\r\n                disabled={!isValid}\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                sx={{ mt: 3, mb: 2 }}\r\n            >\r\n                Register\r\n            </LoadingButton>\r\n            <Grid container>\r\n                <Grid item>\r\n                <Link to='/login'>\r\n                    {\"Already have an account? Sign In\"}\r\n                </Link>\r\n                </Grid>\r\n            </Grid>\r\n            </Box>\r\n        </Container>\r\n    );\r\n}","import React, { ComponentType } from \"react\";\r\nimport { RouteComponentProps, RouteProps } from \"react-router-dom\";\r\nimport { useAppSelector } from '../store/configureStore';\r\nimport { Redirect, Route } from 'react-router';\r\nimport { toast } from 'react-toastify';\r\n\r\ninterface Props extends RouteProps {\r\n    component: ComponentType<RouteComponentProps<any>> | ComponentType<any>;\r\n    roles?: string[];\r\n}\r\n\r\nexport default function PrivateRoute({ component: Component, roles, ...rest }: Props) {\r\n    const {user} = useAppSelector(state => state.account);\r\n    \r\n    return (\r\n      <Route {...rest} render={props => {\r\n          if (!user) {\r\n            return <Redirect to={{ pathname: \"/login\", state: { from: props.location }}} />\r\n          }\r\n\r\n          if (roles && !roles?.some(r => user.roles?.includes(r))) {\r\n            toast.error('Not authorized to access this area');\r\n            return <Redirect to={{ pathname: \"/catalog\" }} />\r\n          }\r\n\r\n          return <Component {...props} />\r\n        }}\r\n      />\r\n    );\r\n  }","import { Box, Button, Grid, Typography } from '@mui/material'\r\nimport { Order } from '../../app/models/order'\r\nimport BasketTable from '../basket/BasketTable';\r\nimport { BasketItem } from '../../app/models/basket';\r\nimport BasketSummary from '../basket/BasketSummary';\r\n\r\ninterface Props {\r\n    order: Order;\r\n    setSelectedOrder: (id: number) => void;\r\n}\r\n\r\nexport default function OrderDetailed({ order, setSelectedOrder }: Props) {\r\n    const subtotal = order.orderItems.reduce((sum, item) => sum + (item.quantity * item.price), 0) ?? 0;\r\n    return (\r\n        <>\r\n            <Box display='flex' justifyContent='space-between'>\r\n                <Typography sx={{ p: 2 }} gutterBottom variant='h4'>Order# {order.id} - {order.orderStatus}</Typography>\r\n                <Button\r\n                    onClick={() => setSelectedOrder(0)}\r\n                    sx={{ m: 2 }}\r\n                    size='large'\r\n                    variant='contained'\r\n                    color='primary'>\r\n                    Back to Orders\r\n                </Button>\r\n            </Box>\r\n            <BasketTable items={order.orderItems as BasketItem[]} isBasket={false} />\r\n            <Grid container>\r\n                <Grid item xs={6} />\r\n                <Grid item xs={6}>\r\n                    <BasketSummary subtotal={subtotal} />\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\n","import { Button, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@mui/material';\r\nimport { useState, useEffect } from 'react';\r\n\r\nimport agent from '../../app/api/agent';\r\nimport LoadingComponent from '../../app/layout/LoadingComponent';\r\nimport { Order } from '../../app/models/order';\r\nimport { currencyFormat } from '../../app/util/util';\r\nimport OrderDetailed from './OrderDetailed';\r\n\r\nexport default function Orders() {\r\n    const [orders, setOrders] = useState<Order[] | null>(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const [selectedOrderNumber, setSelectedOrderNumber] = useState(0);\r\n\r\n    useEffect(() => {\r\n        agent.Orders.list()\r\n            .then(orders => setOrders(orders))\r\n            .catch(error => console.log(error))\r\n            .finally(() => setLoading(false));\r\n    }, []);\r\n\r\n    if (loading) return <LoadingComponent message=\"Loading orders...\" />\r\n\r\n    if (selectedOrderNumber > 0) return (\r\n        <OrderDetailed\r\n            order={orders?.find(o => o.id === selectedOrderNumber)!}\r\n            setSelectedOrder={setSelectedOrderNumber}\r\n        />\r\n    );\r\n\r\n    return (\r\n        <TableContainer component={Paper}>\r\n            <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>Order Number</TableCell>\r\n                        <TableCell align=\"right\">Total</TableCell>\r\n                        <TableCell align=\"right\">Order Date</TableCell>\r\n                        <TableCell align=\"right\">Order Status</TableCell>\r\n                        <TableCell align=\"right\"></TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {orders?.map((order) => (\r\n                        <TableRow\r\n                            key={order.id}\r\n                            sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                        >\r\n                            <TableCell component=\"th\" scope=\"row\">\r\n                                {order.id}\r\n                            </TableCell>\r\n                            <TableCell align=\"right\">{currencyFormat(order.total)}</TableCell>\r\n                            <TableCell align=\"right\">{order.orderDate.split('T')[0]}</TableCell>\r\n                            <TableCell align=\"right\">{order.orderStatus}</TableCell>\r\n                            <TableCell align=\"right\">\r\n                                <Button onClick={() => setSelectedOrderNumber(order.id)}>\r\n                                    View\r\n                                </Button>\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    )\r\n}\r\n","import TextField from '@mui/material/TextField';\r\nimport { useController, UseControllerProps } from \"react-hook-form\";\r\n\r\ninterface Props extends UseControllerProps {\r\n    label: string;\r\n    multiline?: boolean;\r\n    rows?: number;\r\n    type?: string;\r\n}\r\n\r\nexport default function AppTextInput(props: Props) {\r\n    const {fieldState, field} = useController({...props, defaultValue: ''});\r\n\r\n    return (\r\n        <TextField\r\n            {...props}\r\n            {...field}\r\n            multiline={props.multiline}\r\n            rows={props.rows}\r\n            type={props.type}\r\n            fullWidth\r\n            variant='outlined'\r\n            error={!!fieldState.error}\r\n            helperText={fieldState.error?.message}\r\n        />\r\n    )\r\n}\r\n","import { Checkbox, FormControlLabel } from \"@mui/material\";\r\nimport { useController, UseControllerProps } from \"react-hook-form\";\r\n\r\ninterface Props extends UseControllerProps {\r\n    label: string;\r\n    disabled: boolean;\r\n}\r\n\r\nexport default function AppCheckbox(props: Props) {\r\n    const {field} = useController({...props, defaultValue: false});\r\n\r\n    return (\r\n        <FormControlLabel\r\n            control={\r\n                <Checkbox\r\n                    {...field}\r\n                    checked={field.value}\r\n                    color='secondary'\r\n                    disabled={props.disabled}\r\n                />\r\n            }\r\n            label={props.label}\r\n        />\r\n    )\r\n}\r\n","import Grid from '@mui/material/Grid';\r\nimport Typography from '@mui/material/Typography';\r\nimport { useFormContext } from 'react-hook-form';\r\nimport AppTextInput from '../../app/components/AppTextInput';\r\nimport AppCheckbox from '../../app/components/AppCheckbox';\r\n\r\nexport default function AddressForm() {\r\n    const {control, formState} = useFormContext();\r\n\r\n    return (\r\n        <>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n                Shipping address\r\n            </Typography>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12} sm={12}>\r\n                    <AppTextInput control={control} name='fullName' label=\"Full Name\" />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <AppTextInput control={control} name='address1' label=\"Address line 1\" />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <AppTextInput control={control} name='address2' label=\"Address line 2\" />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <AppTextInput control={control} name='city' label=\"City\" />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <AppTextInput control={control} name='state' label=\"State/Province/Region\" />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <AppTextInput control={control} name='zip' label=\"Zip/Postal Code\" />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <AppTextInput control={control} name='country' label=\"Country\" />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <AppCheckbox\r\n                        disabled={!formState.isDirty}\r\n                        control={control}\r\n                        name='saveAddress'\r\n                        label=\"Save this as the default address\"\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n}","import { InputBaseComponentProps } from '@mui/material';\r\nimport { forwardRef, Ref, useImperativeHandle, useRef } from 'react';\r\n\r\ninterface Props extends InputBaseComponentProps {}\r\n\r\nexport const StripeInput = forwardRef(function StripeInput({component: Component, ...props}: Props, ref: Ref<unknown>) {\r\n    const elementRef = useRef<any>();\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        focus: () => elementRef.current.focus\r\n    }));\r\n\r\n    return (\r\n        <Component\r\n            onReady={(element: any) => elementRef.current = element}\r\n            {...props}\r\n        />\r\n    );\r\n});","import Typography from '@mui/material/Typography';\r\nimport Grid from '@mui/material/Grid';\r\nimport TextField from '@mui/material/TextField';\r\nimport { useFormContext } from 'react-hook-form';\r\nimport AppTextInput from '../../app/components/AppTextInput';\r\nimport { CardCvcElement, CardExpiryElement, CardNumberElement } from '@stripe/react-stripe-js';\r\nimport { StripeInput } from './StripeInput';\r\nimport { StripeElementType } from '@stripe/stripe-js';\r\n\r\ninterface Props {\r\n  cardState: {elementError: {[key in StripeElementType]?: string}};\r\n  onCardInputChange: (e: any) => void;\r\n}\r\n\r\nexport default function PaymentForm({ cardState, onCardInputChange }: Props) {\r\n  const {control} = useFormContext();\r\n\r\n  return (\r\n    <>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Payment method\r\n      </Typography>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} md={6}>\r\n          <AppTextInput control={control} name='nameOnCard' label='Name on Card' />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <TextField\r\n            onChange={onCardInputChange}\r\n            error={!!cardState.elementError.cardNumber}\r\n            helperText={cardState.elementError.cardNumber}\r\n            id=\"cardNumber\"\r\n            label=\"Card number\"\r\n            fullWidth\r\n            autoComplete=\"cc-number\"\r\n            variant=\"outlined\"\r\n            InputLabelProps={{ shrink: true }}\r\n            InputProps={{\r\n              inputComponent: StripeInput,\r\n              inputProps: {\r\n                component: CardNumberElement\r\n              }\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <TextField\r\n            onChange={onCardInputChange}\r\n            error={!!cardState.elementError.cardExpiry}\r\n            helperText={cardState.elementError.cardExpiry}\r\n            id=\"expDate\"\r\n            label=\"Expiry date\"\r\n            fullWidth\r\n            autoComplete=\"cc-exp\"\r\n            variant=\"outlined\"\r\n            InputLabelProps={{ shrink: true }}\r\n            InputProps={{\r\n              inputComponent: StripeInput,\r\n              inputProps: {\r\n                component: CardExpiryElement\r\n              }\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <TextField\r\n            onChange={onCardInputChange}\r\n            error={!!cardState.elementError.cardCvc}\r\n            helperText={cardState.elementError.cardCvc}\r\n            id=\"cvv\"\r\n            label=\"CVV\"\r\n            fullWidth\r\n            autoComplete=\"cc-csc\"\r\n            variant=\"outlined\"\r\n            InputLabelProps={{ shrink: true }}\r\n            InputProps={{\r\n              inputComponent: StripeInput,\r\n              inputProps: {\r\n                component: CardCvcElement\r\n              }\r\n            }}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}","import Typography from '@mui/material/Typography';\r\nimport Grid from '@mui/material/Grid';\r\nimport BasketSummary from '../basket/BasketSummary';\r\nimport BasketTable from '../basket/BasketTable';\r\nimport { useAppSelector } from '../../app/store/configureStore';\r\n\r\nexport default function Review() {\r\n  const {basket} = useAppSelector(state => state.basket);\r\n  \r\n  return (\r\n    <>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Order summary\r\n      </Typography>\r\n      {basket &&\r\n      <BasketTable items={basket.items} isBasket={false} />}\r\n      <Grid container>\r\n        <Grid item xs={6} />\r\n        <Grid item xs={6} sx={{ paddingTop: 1 }}>\r\n          <BasketSummary />\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}","import * as yup from 'yup';\r\n\r\nexport const validationSchema = [\r\n    yup.object({\r\n        fullName: yup.string().required('Full name is required'),\r\n        address1: yup.string().required('Address line 1 is required'),\r\n        address2: yup.string().required('Address line 2 is required'),\r\n        city: yup.string().required('City is required'),\r\n        state: yup.string().required('State is required'),\r\n        zip: yup.string().required('Zip code is required'),\r\n        country: yup.string().required('Country is required'),\r\n    }),\r\n    yup.object(),\r\n    yup.object({\r\n        nameOnCard: yup.string().required('Name on card is required'),\r\n    })\r\n]","import { Box, Button, Paper, Step, StepLabel, Stepper, Typography } from \"@mui/material\";\r\nimport { useState, useEffect } from 'react';\r\nimport AddressForm from \"./AddressForm\";\r\nimport PaymentForm from \"./PaymentForm\";\r\nimport Review from \"./Review\";\r\nimport { FieldValues, FormProvider, useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport { validationSchema } from './checkoutValidation';\r\nimport agent from '../../app/api/agent';\r\nimport { useAppDispatch, useAppSelector } from '../../app/store/configureStore';\r\nimport { clearBasket } from \"../basket/basketSlice\";\r\nimport { LoadingButton } from '@mui/lab';\r\nimport { StripeElementType } from '@stripe/stripe-js';\r\nimport { useElements, useStripe, CardNumberElement } from '@stripe/react-stripe-js';\r\n\r\nconst steps = ['Shipping address', 'Review your order', 'Payment details'];\r\n\r\nexport default function CheckoutPage() {    \r\n    const [activeStep, setActiveStep] = useState(0);\r\n    const [orderNumber, setOrderNumber] = useState(0);\r\n    const [loading, setLoading] = useState(false);\r\n    const dispatch = useAppDispatch();\r\n    const [cardState, setCardState] = useState<{elementError: {[key in StripeElementType]?: string}}>({elementError: {}});\r\n    const [cardComplete, setCardComplete] = useState<any>({cardNumber: false, cardExpiry: false, cardCvc: false});\r\n    const [paymentMessage, setPaymentMessage] = useState('');\r\n    const [paymentSucceeded, setPaymentSucceeded] = useState(false);\r\n    const {basket} = useAppSelector(state => state.basket);\r\n    const stripe = useStripe();\r\n    const elements = useElements();\r\n  \r\n    function onCardInputChange(e: any) {\r\n      setCardState({\r\n        ...cardState,\r\n        elementError: {\r\n          ...cardState.elementError,\r\n          [e.elementType]: e.error?.message\r\n        }\r\n      });\r\n      setCardComplete({...cardComplete, [e.elementType]: e.complete});\r\n    }\r\n\r\n    function getStepContent(step: number) {\r\n        switch (step) {\r\n            case 0:\r\n                return <AddressForm />;\r\n            case 1:\r\n                return <Review />;\r\n            case 2:\r\n                return <PaymentForm cardState={cardState} onCardInputChange={onCardInputChange} />;\r\n            default:\r\n                throw new Error('Unknown step');\r\n        }\r\n    }\r\n\r\n    const currentValidationSchema = validationSchema[activeStep];\r\n\r\n    const methods = useForm({\r\n        mode: 'all',\r\n        resolver: yupResolver(currentValidationSchema)\r\n    });\r\n\r\n    useEffect(() => {\r\n        agent.Account.fetchAddress()\r\n            .then(response => {\r\n                if (response) {\r\n                    methods.reset({...methods.getValues(), ...response, saveAddress: false});\r\n                }\r\n            });\r\n    }, [methods]);\r\n\r\n    async function submitOrder(data: FieldValues) {\r\n        setLoading(true);\r\n        const {nameOnCard, saveAddress, ...shippingAddress} = data;\r\n        if (!stripe || !elements) return; // Stripe is not ready\r\n\r\n        try {\r\n            const cardElement = elements.getElement(CardNumberElement);\r\n            const paymentResult = await stripe.confirmCardPayment(basket?.clientSecret!, {\r\n                payment_method: {\r\n                    card: cardElement!,\r\n                    billing_details: {\r\n                        name: nameOnCard,\r\n                    }\r\n                }\r\n            });\r\n            console.log(paymentResult);\r\n            if (paymentResult.paymentIntent?.status === 'succeeded') {\r\n                const orderNumber = await agent.Orders.create({saveAddress, shippingAddress});\r\n                setOrderNumber(orderNumber);\r\n                setPaymentSucceeded(true);\r\n                setPaymentMessage('Thank you - We have received your payment!');\r\n                setActiveStep(activeStep + 1);\r\n                dispatch(clearBasket());\r\n                setLoading(false);\r\n            }\r\n            else {\r\n                setPaymentMessage(paymentResult.error?.message!);\r\n                setPaymentSucceeded(false);\r\n                setLoading(false);\r\n                setActiveStep(activeStep + 1);\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    const handleNext = async (data: FieldValues) => {\r\n        if (activeStep === steps.length - 1) {\r\n            await submitOrder(data);\r\n        }\r\n        else {\r\n            setActiveStep(activeStep + 1);\r\n        }\r\n    };\r\n\r\n    const handleBack = () => {\r\n        setActiveStep(activeStep - 1);\r\n    };\r\n\r\n    function submitDisabled(): boolean {\r\n        if (activeStep === steps.length - 1) {\r\n            return !cardComplete.cardNumber\r\n                || !cardComplete.cardExpiry\r\n                || !cardComplete.cardCvc\r\n                || !methods.formState.isValid;\r\n        }\r\n        else {\r\n            return !methods.formState.isValid;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <FormProvider {...methods}>\r\n            <Paper variant=\"outlined\" sx={{my: {xs: 3, md: 6}, p: {xs: 2, md: 3}}}>\r\n                <Typography component=\"h1\" variant=\"h4\" align=\"center\">\r\n                    Checkout\r\n                </Typography>\r\n                <Stepper activeStep={activeStep} sx={{pt: 3, pb: 5}}>\r\n                    {steps.map((label) => (\r\n                        <Step key={label}>\r\n                            <StepLabel>{label}</StepLabel>\r\n                        </Step>\r\n                    ))}\r\n                </Stepper>\r\n                <>\r\n                    {activeStep === steps.length ? (\r\n                        <>\r\n                            <Typography variant=\"h5\" gutterBottom>\r\n                                {paymentMessage}\r\n                            </Typography>\r\n                            {paymentSucceeded ? (\r\n                                <Typography variant=\"subtitle1\">\r\n                                    Your order number is #{orderNumber}. We have not emailed your order\r\n                                    confirmation, and will not send you an update when your order has\r\n                                    shipped as this is a fake store!\r\n                                </Typography>\r\n                            ) : (\r\n                                <Button variant='contained' onClick={handleBack} sx={{mt: 3, ml: 1}}>\r\n                                    Go back and try again!\r\n                                </Button>\r\n                            )}\r\n                        </>\r\n                    ) : (\r\n                        <form onSubmit={methods.handleSubmit(handleNext)}>\r\n                            {getStepContent(activeStep)}\r\n                            <Box sx={{display: 'flex', justifyContent: 'flex-end'}}>\r\n                                {activeStep !== 0 && (\r\n                                    <Button onClick={handleBack} sx={{mt: 3, ml: 1}}>\r\n                                        Back\r\n                                    </Button>\r\n                                )}\r\n                                <LoadingButton\r\n                                    loading={loading}\r\n                                    disabled={submitDisabled()}\r\n                                    variant=\"contained\"\r\n                                    type='submit'\r\n                                    sx={{mt: 3, ml: 1}}\r\n                                >\r\n                                    {activeStep === steps.length - 1 ? 'Place order' : 'Next'}\r\n                                </LoadingButton>\r\n                            </Box>\r\n                        </form>\r\n                    )}\r\n                </>\r\n            </Paper>\r\n        </FormProvider>\r\n    );\r\n}\r\n","import { Elements } from \"@stripe/react-stripe-js\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport { useState, useEffect } from 'react';\r\nimport { useAppDispatch } from \"../../app/store/configureStore\";\r\nimport CheckoutPage from \"./CheckoutPage\";\r\nimport agent from '../../app/api/agent';\r\nimport { setBasket } from \"../basket/basketSlice\";\r\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\r\n\r\nconst stripePromise = loadStripe('pk_test_51IgB4nA0YWUby5DnuuWQ2rEpICQkLfmG0lDVxK2aS6KRZkNEyo22C56zIh2GR1tonNMdRuZ0cjbKiLKeRR0DyAZ600mZiX91a6');\r\n\r\nexport default function CheckoutWrapper() {\r\n    const dispatch = useAppDispatch();\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        agent.Payments.createPaymentIntent()\r\n            .then(basket => dispatch(setBasket(basket)))\r\n            .catch(error => console.log(error))\r\n            .finally(() => setLoading(false));\r\n    }, [dispatch]);\r\n\r\n    if (loading) return <LoadingComponent message='Loading checkout...' />\r\n\r\n    return (\r\n        <Elements stripe={stripePromise}>\r\n            <CheckoutPage />\r\n        </Elements>\r\n    )\r\n}\r\n","import { FormControl, InputLabel, Select, MenuItem, FormHelperText } from \"@mui/material\";\r\nimport { UseControllerProps, useController } from 'react-hook-form';\r\n\r\ninterface Props extends UseControllerProps {\r\n    label: string;\r\n    items: string[];\r\n}\r\n\r\nexport default function AppSelectList(props: Props) {\r\n    const {fieldState, field} = useController({...props, defaultValue: ''});\r\n    \r\n    return (\r\n        <FormControl fullWidth error={!!fieldState.error}>\r\n            <InputLabel>{props.label}</InputLabel>\r\n            <Select\r\n                value={field.value}\r\n                label={props.label}\r\n                onChange={field.onChange}\r\n            >\r\n                {props.items.map((item, index) => (\r\n                    <MenuItem key={index} value={item}>{item}</MenuItem>\r\n                ))}\r\n            </Select>\r\n            <FormHelperText>{fieldState.error?.message}</FormHelperText>\r\n        </FormControl>\r\n    )\r\n}\r\n","import { useCallback } from 'react'\r\nimport { useDropzone } from 'react-dropzone'\r\nimport { UseControllerProps, useController } from 'react-hook-form';\r\nimport { FormControl, FormHelperText, Typography } from '@mui/material';\r\nimport { UploadFile } from '@mui/icons-material';\r\n\r\ninterface Props extends UseControllerProps {}\r\n\r\nexport default function AppDropzone(props: Props) {\r\n    const {fieldState, field} = useController({...props, defaultValue: null});\r\n\r\n    const dzStyles = {\r\n        display: 'flex',\r\n        border: 'dashed 3px #eee',\r\n        borderColor: '#eee',\r\n        borderRadius: '5px',\r\n        paddingTop: '30px',\r\n        alignItems: 'center',\r\n        height: 200,\r\n        width: 500,\r\n    };\r\n\r\n    const dzActive = {\r\n        borderColor: 'green',\r\n    };\r\n\r\n    const onDrop = useCallback(acceptedFiles => {\r\n        // Do something with the files\r\n        acceptedFiles[0] = Object.assign(\r\n            acceptedFiles[0],\r\n            {preview: URL.createObjectURL(acceptedFiles[0])}\r\n        );\r\n        field.onChange(acceptedFiles[0]);\r\n    }, [field]);\r\n\r\n    const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop })\r\n\r\n    return (\r\n        <div {...getRootProps()}>\r\n            <FormControl\r\n                style={isDragActive ? {...dzStyles, ...dzActive} : dzStyles}\r\n                error={!!fieldState.error}\r\n            >\r\n                <input {...getInputProps()} />\r\n                <UploadFile sx={{ fontSize: '100px' }} />\r\n                <Typography variant='h4'>Drop image here</Typography>\r\n                <FormHelperText>{fieldState.error?.message}</FormHelperText>\r\n            </FormControl>\r\n        </div>\r\n    )\r\n}\r\n","import * as yup from 'yup';\r\n\r\nexport const validationSchema = yup.object({\r\n    name: yup.string().required(),\r\n    brand: yup.string().required(),\r\n    type: yup.string().required(),\r\n    price: yup.number().required().moreThan(100),\r\n    quantityInStock: yup.number().required().min(0),\r\n    description: yup.string().required(),\r\n    file: yup.mixed().when('pictureUrl', {\r\n        is: (value: string) => !value,\r\n        then: yup.mixed().required('Please provide an image')\r\n    }),\r\n});","import { Typography, Grid, Paper, Box, Button } from \"@mui/material\";\r\nimport { useForm, FieldValues } from 'react-hook-form';\r\nimport AppTextInput from \"../../app/components/AppTextInput\";\r\nimport { Product } from \"../../app/models/product\";\r\nimport { useEffect } from 'react';\r\nimport useProducts from '../../app/hooks/useProducts';\r\nimport AppSelectList from '../../app/components/AppSelectList';\r\nimport AppDropzone from '../../app/components/AppDropzone';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport { validationSchema } from './productValidation';\r\nimport agent from '../../app/api/agent';\r\nimport { useAppDispatch } from '../../app/store/configureStore';\r\nimport { setProduct } from \"../catalog/catalogSlice\";\r\nimport { LoadingButton } from '@mui/lab';\r\n\r\ninterface Props {\r\n    product?: Product;\r\n    cancelEdit: () => void;\r\n}\r\n\r\nexport default function ProductForm({product, cancelEdit}: Props) {\r\n    const { control, reset, handleSubmit, watch, formState: {isDirty, isSubmitting} } = useForm({\r\n        resolver: yupResolver(validationSchema)\r\n    });\r\n    const {brands, types} = useProducts();\r\n    const watchFile = watch('file', null);\r\n    const dispatch = useAppDispatch();\r\n\r\n    useEffect(() => {\r\n        if (product && !watchFile && !isDirty) reset(product);\r\n        return () => {\r\n            if (watchFile) URL.revokeObjectURL(watchFile.preview);\r\n        }\r\n    }, [product, reset, watchFile, isDirty]);\r\n\r\n    async function handleSubmitData(data: FieldValues) {\r\n        try {\r\n            let response: Product;\r\n            if (product) {\r\n                response = await agent.Admin.updateProduct(data);\r\n            }\r\n            else {\r\n                response = await agent.Admin.createProduct(data);\r\n            }\r\n            dispatch(setProduct(response));\r\n            cancelEdit();\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Box component={Paper} sx={{p: 4}}>\r\n            <Typography variant=\"h4\" gutterBottom sx={{mb: 4}}>\r\n                Product Details\r\n            </Typography>\r\n            <form onSubmit={handleSubmit(handleSubmitData)}>\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={12} sm={12}>\r\n                        <AppTextInput control={control} name='name' label='Product name' />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <AppSelectList control={control} items={brands} name='brand' label='Brand' />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <AppSelectList control={control} items={types} name='type' label='Type' />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <AppTextInput control={control} type='number' name='price' label='Price' />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <AppTextInput control={control} type='number' name='quantityInStock' label='Quantity in Stock' />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <AppTextInput control={control} multiline={true} rows={4} name='description' label='Description' />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Box display='flex' justifyContent='space-between' alignItems='center'>\r\n                            <AppDropzone control={control} name='file' />\r\n                            {watchFile ? (\r\n                                <img src={watchFile.preview} alt=\"preview\" style={{ maxHeight: 200}} />\r\n                            ) : (\r\n                                <img src={product?.pictureUrl} alt={product?.name} style={{ maxHeight: 200}} />\r\n                            )}\r\n                        </Box>\r\n                    </Grid>\r\n                </Grid>\r\n                <Box display='flex' justifyContent='space-between' sx={{mt: 3}}>\r\n                    <Button onClick={cancelEdit} variant='contained' color='inherit'>Cancel</Button>\r\n                    <LoadingButton loading={isSubmitting} type='submit' variant='contained' color='success'>Submit</LoadingButton>\r\n                </Box>\r\n            </form>\r\n        </Box>\r\n    )\r\n}","import { Typography, Button, TableContainer, Paper, Table, TableHead, TableRow, TableCell, TableBody, Box } from \"@mui/material\";\r\nimport { Edit, Delete } from \"@mui/icons-material\";\r\nimport { currencyFormat } from \"../../app/util/util\";\r\nimport useProducts from '../../app/hooks/useProducts';\r\nimport AppPagination from \"../../app/components/AppPagination\";\r\nimport { useAppDispatch } from '../../app/store/configureStore';\r\nimport { removeProduct, setPageNumber } from \"../catalog/catalogSlice\";\r\nimport { useState } from 'react';\r\nimport ProductForm from './ProductForm';\r\nimport { Product } from \"../../app/models/product\";\r\nimport agent from '../../app/api/agent';\r\nimport { LoadingButton } from '@mui/lab';\r\n\r\nexport default function Inventory() {\r\n    const {products, metaData} = useProducts();\r\n    const dispatch = useAppDispatch();\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [selectedProduct, setSelectedProduct] = useState<Product | undefined>(undefined);\r\n    const [loading, setLoading] = useState(false);\r\n    const [target, setTarget] = useState(0);\r\n\r\n    function handleSelectProduct(product: Product) {\r\n        setSelectedProduct(product);\r\n        setEditMode(true);\r\n    }\r\n\r\n    function handleDeleteProduct(id: number) {\r\n        setLoading(true);\r\n        setTarget(id);\r\n        agent.Admin.deleteProduct(id)\r\n            .then(() => dispatch(removeProduct(id)))\r\n            .catch(error => console.log(error))\r\n            .finally(() => setLoading(false));\r\n    }\r\n\r\n    function cancelEdit() {\r\n        if (selectedProduct) setSelectedProduct(undefined);\r\n        setEditMode(false);\r\n    }\r\n\r\n    if (editMode) return <ProductForm product={selectedProduct} cancelEdit={cancelEdit} />\r\n\r\n    return (\r\n        <>\r\n            <Box display='flex' justifyContent='space-between'>\r\n                <Typography sx={{ p: 2 }} variant='h4'>Inventory</Typography>\r\n                <Button onClick={() => setEditMode(true)} sx={{ m: 2 }} size='large' variant='contained'>Create</Button>\r\n            </Box>\r\n            <TableContainer component={Paper}>\r\n                <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>#</TableCell>\r\n                            <TableCell align=\"left\">Product</TableCell>\r\n                            <TableCell align=\"right\">Price</TableCell>\r\n                            <TableCell align=\"center\">Type</TableCell>\r\n                            <TableCell align=\"center\">Brand</TableCell>\r\n                            <TableCell align=\"center\">Quantity</TableCell>\r\n                            <TableCell align=\"right\"></TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {products.map((product) => (\r\n                            <TableRow\r\n                                key={product.id}\r\n                                sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                            >\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    {product.id}\r\n                                </TableCell>\r\n                                <TableCell align=\"left\">\r\n                                    <Box display='flex' alignItems='center'>\r\n                                        <img src={product.pictureUrl} alt={product.name} style={{ height: 50, marginRight: 20 }} />\r\n                                        <span>{product.name}</span>\r\n                                    </Box>\r\n                                </TableCell>\r\n                                <TableCell align=\"right\">{currencyFormat(product.price)}</TableCell>\r\n                                <TableCell align=\"center\">{product.type}</TableCell>\r\n                                <TableCell align=\"center\">{product.brand}</TableCell>\r\n                                <TableCell align=\"center\">{product.quantityInStock}</TableCell>\r\n                                <TableCell align=\"right\">\r\n                                    <Button onClick={() => handleSelectProduct(product)} startIcon={<Edit />} />\r\n                                    <LoadingButton\r\n                                        loading={loading && target === product.id}\r\n                                        startIcon={<Delete />} color='error'\r\n                                        onClick={() => handleDeleteProduct(product.id)}\r\n                                    />\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n            {metaData &&\r\n                <Box sx={{ pt: 2 }}>\r\n                    <AppPagination\r\n                        metaData={metaData}\r\n                        onPageChange={(page: number) => dispatch(setPageNumber({pageNumber: page}))}\r\n                    />\r\n                </Box>\r\n            }\r\n        </>\r\n    )\r\n}\r\n","import { Container, createTheme, CssBaseline, ThemeProvider } from \"@mui/material\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { Route, Switch } from \"react-router\";\nimport { ToastContainer } from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport Header from './Header';\nimport Catalog from '../../features/catalog/Catalog';\nimport HomePage from '../../features/home/HomePage';\nimport AboutPage from '../../features/about/AboutPage';\nimport ContactPage from '../../features/contact/ContactPage';\nimport ProductDetails from '../../features/catalog/ProductDetails';\nimport BasketPage from '../../features/basket/BasketPage';\nimport ServerError from '../errors/ServerError';\nimport NotFound from '../errors/NotFound';\nimport LoadingComponent from \"./LoadingComponent\";\nimport Login from '../../features/account/Login';\nimport Register from '../../features/account/Register';\nimport { useAppDispatch } from \"../store/configureStore\";\nimport { fetchBasketAsync } from \"../../features/basket/basketSlice\";\nimport { fetchCurrentUser } from '../../features/account/accountSlice';\nimport PrivateRoute from './PrivateRoute';\nimport Orders from '../../features/orders/Orders';\nimport CheckoutWrapper from \"../../features/checkout/CheckoutWrapper\";\nimport Inventory from \"../../features/admin/Inventory\";\n\nfunction App() {\n  const dispatch = useAppDispatch();\n  const [loading, setLoading] = useState(true);\n\n  const initApp = useCallback(async () => {\n    try {\n      await dispatch(fetchCurrentUser());\n      await dispatch(fetchBasketAsync());\n    } catch (error) {\n      console.log(error);\n    }\n  }, [dispatch]);\n\n  useEffect(() => {\n    initApp().then(() => setLoading(false));\n  }, [initApp]);\n\n  const [darkMode, setDarkMode] = useState(false);\n  const paletteType = darkMode ? 'dark' : 'light';\n  const theme = createTheme({\n    palette: {\n      mode: paletteType,\n      background: {\n        default: (paletteType === 'light') ? '#eaeaea' : '#121212'\n      }\n    }\n  });\n\n  const handleThemeChange = () => {\n    setDarkMode(!darkMode);\n  }\n\n  if (loading) return <LoadingComponent message='Initializing app...' />\n\n  return (\n    <ThemeProvider theme={theme}>\n      <ToastContainer position='bottom-right' theme={paletteType} />\n      <CssBaseline />\n      <Header darkMode={darkMode} handleThemeChange={handleThemeChange} />\n      <Route exact path=\"/\" component={HomePage} />\n      <Route path={'/(.+)'} render={() => (\n        <Container sx={{ mt: 4 }}>\n          <Switch>        \n            <Route exact path=\"/catalog\" component={Catalog} />\n            <Route path=\"/catalog/:id\" component={ProductDetails} />\n            <Route path=\"/about\" component={AboutPage} />\n            <Route path=\"/contact\" component={ContactPage} />\n            <Route path=\"/basket\" component={BasketPage} />\n            <PrivateRoute path=\"/checkout\" component={CheckoutWrapper} />\n            <PrivateRoute path=\"/orders\" component={Orders} />\n            <PrivateRoute path=\"/inventory\" component={Inventory} roles={['Admin']} />\n            <Route path=\"/login\" component={Login} />\n            <Route path=\"/register\" component={Register} />\n            <Route path=\"/server-error\" component={ServerError} />\n            <Route component={NotFound} />\n          </Switch>\n        </Container>\n      )} />\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './app/layout/styles.css';\nimport App from './app/layout/App';\nimport reportWebVitals from './reportWebVitals';\nimport { Router } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport { store } from './app/store/configureStore';\nimport { Provider } from 'react-redux';\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\n\nexport const history = createBrowserHistory();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router history={history}>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}